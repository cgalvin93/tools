#entropy categories
low_cm1=[]
low_cm15=[]
low_cm2=[]
low_cm3=[]
low_cm5=[]
low_cmref=[]
low_fd=[]
low_fdref=[]

med_cm1=[]
med_cm15=[]
med_cm2=[]
med_cm3=[]
med_cm5=[]
med_cmref=[]
med_fd=[]
med_fdref=[]

hi_cm1=[]
hi_cm15=[]
hi_cm2=[]
hi_cm3=[]
hi_cm5=[]
hi_cmref=[]
hi_fd=[]
hi_fdref=[]

#chemistries
pol_cm1=[]
pol_cm15=[]
pol_cm2=[]
pol_cm3=[]
pol_cm5=[]
pol_cmref=[]
pol_fd=[]
pol_fdref=[]

np_cm1=[]
np_cm15=[]
np_cm2=[]
np_cm3=[]
np_cm5=[]
np_cmref=[]
np_fd=[]
np_fdref=[]

ar_cm1=[]
ar_cm15=[]
ar_cm2=[]
ar_cm3=[]
ar_cm5=[]
ar_cmref=[]
ar_fd=[]
ar_fdref=[]

q_cm1=[]
q_cm15=[]
q_cm2=[]
q_cm3=[]
q_cm5=[]
q_cmref=[]
q_fd=[]
q_fdref=[]

gly_cm1=[]
gly_cm15=[]
gly_cm2=[]
gly_cm3=[]
gly_cm5=[]
gly_cmref=[]
gly_fd=[]
gly_fdref=[]



'''
SEQUENCE ENTROPIES

3S6F
l1=[1.6463619822543236, 2.1359805947118473, 1.1626757134623693, 1.2301034552319616, 1.5873041630904845, 2.1364443855007975, 0.6714966902300147, 0.6932860986398813, 2.30528191824096, 2.7232965457970297, 2.0480958154764637, 1.2753496653764298, 0.45292367052588456, 1.9400891589123943]
l2=[0.03494480184996637, 0.24503983277974387, 0.07560952620031355, 0.6653390115098509, 1.159746098348808, 0.6394566804870909, 0.0, 0.0, 1.669591652151989, 1.9362244524861685, 1.1152582556490216, 0.0, 0.6238914264362811, 2.2289747777755204]
l3=[0.0, 0.05240778852594545, 0.20466598445679823, 0.560855359422572, 1.185101484188802, 0.6274263269883479, 0.0, 0.0, 1.663336869747088, 2.057823908025262, 1.1079969680862791, 0.017475533760343134, 0.6459363567961528, 2.3348248401491105]
l4=[0.04894205262314573, 0.08743022193551855, 0.40216928641284455, 0.8704263259515869, 1.2827131453608778, 0.9118201590713899, 0.0, 0.0, 1.593547753560485, 2.230076523251202, 1.3318299391824366, 0.03494480184996637, 0.7268214794431925, 2.367066464611421]
l5=[0.13972422770828827, 0.11604423430510263, 1.0803143709415126, 0.8123938953395103, 0.6692943895833054, 1.344553963505821, 0.0, 0.0, 0.9541721528263672, 1.427428920618746, 1.7997932989518137, 0.20943984071900923, 0.861184797040883, 2.024079907988747]
l6=[0.47092008078769154, 0.06639874206324653, 0.8760292887986083, 0.3999429136991485, 0.4196013648552012, 1.832389646716944, 0.017475533760343134, 0.017475533760343134, 0.7289918838068352, 0.5581641323411488, 1.7734396445368588, 0.5029977404322715, 1.1046035475191756, 0.7055782072580424]
l7=[0.03494480184996637, 1.0442445188984877, 0.0, 0.9041997881847272, 1.4437848096085588, 0.12594151543708776, 0.0, 0.6886278683856617, 1.3511227609323706, 1.4605967972681202, 1.5088689894194318, 0.017475533760343134, 0.7553647011310374, 1.2877705752628321]
l8=[0.6390353014756497, 1.0610763291106668, 0.40739778363193224, 2.34934839990307, 0.4206933184791857, 2.244548734752533, 0.10194396251238452, 0.26145240079859006, 1.1719740467124744, 2.531510066057004, 1.9991322834562768, 1.1466896869986996, 1.7001835808234, 2.6099366498588834]

1f4p
l1=[0.58762575843223, 1.8475241875066346, 1.357509265180517, 0.19668802023155607, 1.8112403314111913, 1.2268777120160135, 1.0101954984312673, 0.3831096218459243, 1.9989097563495097, 0.6744314636183196, 2.030623019051236, 1.8207724410926989, 1.2214843911144377, 0.06933872009753957, 0.8586503856929171, 0.8095161194122211, 2.6276593533669113, 0.61687407344621, 1.0913389755354106]
l2=[1.0433025378697915, 2.5506993962011384, 2.255257163645453, 0.0, 1.430279409239204, 0.7755939386420836, 0.8942782719685469, 0.9516252695771708, 0.33569920473413445, 0.0, 2.723761184529513, 1.6511493021775874, 1.258154466340989, 0.0, 1.6790577854329178, 0.8615865477137608, 2.44739084182089, 0.8639887559609786, 1.165782559333101]
l3=[0.9826230868314101, 2.5663386334442895, 2.2131010335044117, 0.0, 0.8885249944681294, 0.389414680228868, 0.641815314687161, 0.7251217075322449, 0.3890846683272021, 0.0, 2.721417408889093, 1.7412706989218292, 1.3695782972009491, 0.0, 1.6025460250792443, 0.9208825191491805, 2.3596556192728753, 1.0806651389757531, 1.2073041428958227]
l4=[0.7331638730123498, 2.50813876725617, 2.386092743283234, 0.0, 0.44973401720697537, 0.1737853677088034, 0.43134789005695906, 0.6425970534405416, 0.4454453734172922, 0.0, 2.7464642082702007, 1.6984503520408059, 1.4733216220697225, 0.0, 1.4538658447634183, 0.8727450475217283, 2.565828912974401, 1.0605236910053175, 1.187582840984404]
l5=[0.4445559167692011, 2.280331336221807, 2.4399899742402855, 0.0, 0.3020345913655317, 0.19555110053590308, 0.25087263705727186, 0.3736727955170952, 0.5510868968716283, 0.0, 2.7221440099743863, 1.2842956023888608, 1.654775109396879, 0.0, 1.3188824504417065, 0.8547691714178878, 2.489228519337762, 1.4455949885729178, 1.1945337721106155]
l6=[0.1482590044457559, 1.2221332872189345, 1.6190591494266908, 0.03147906594716675, 0.10761535423222196, 0.3492835746266103, 0.12193692301885527, 0.2622671457980592, 1.1243598875134255, 0.0, 2.6700155012030446, 0.8475141119626962, 1.433696043193315, 0.0, 1.3751455548048908, 0.8451286800243634, 2.227095117325069, 1.6745997315027232, 1.2702781131091954]
l7=[0.9244768739504312, 1.1363649008198724, 0.9894450954056015, 0.0, 0.9979767854527883, 0.6410354778811556, 0.056001534354847345, 0.0, 0.017475533760343134, 0.0, 0.6664589005803316, 0.6954458738449336, 0.0, 0.0, 0.2538097372971107, 0.49339233174026287, 0.2848331776969292, 0.0, 0.21081335149867103]
l8=[0.7999593966193723, 2.6770096612344485, 1.5606806483359146, 0.13440722062873453, 1.1541670359077907, 1.5766013475668672, 0.9244925977441126, 1.1555559426051205, 1.5676626740079644, 0.0, 2.80413429267462, 1.9284245041037806, 1.5602777701556336, 0.03188152970661097, 2.317513568114671, 0.9881601592289797, 2.4144230594680436, 2.3080976181016424, 1.2810113543589539]

2xbn
l1=[1.1074077008064083, 2.3507667617650343, 0.3396105337811549, 2.0277733827368776, 2.031863989180083, 1.4330513992153222, 2.4625299774157035, 2.1554886126747506, 0.04399005933711353, 1.6391389593551877, 0.8632214565477709, 1.1917058590354084, 0.9064597240045547, 0.13566653627242223]
l2=[2.28778449625271, 1.8612535221171214, 0.0, 2.057805552896678, 1.823099613439999, 1.5109274733710647, 0.8952919431313597, 1.5893345079377996, 0.23117688916854504, 0.7783037342069846, 1.5392722542812711, 1.6267758367959955, 1.7251352487239955, 1.712283902652484]
l3=[2.217484144407961, 1.796095156770928, 0.0, 1.5122049292223083, 1.8594316863121243, 1.4554157969759058, 0.8683909876355419, 1.630349379065049, 0.0873148542681241, 0.7197246567180862, 1.3444890582899582, 1.5276125606487758, 1.791127837496649, 1.6682119752518498]
l4=[2.180427926281131, 1.7903009113076538, 0.017475533760343134, 1.0297145533112164, 1.8874273443411913, 1.3124456284438206, 0.9839979571390749, 1.506121030608383, 0.06986447796604615, 0.8175390588014022, 1.091634696092488, 1.0411903887982494, 1.8226794605012557, 1.5524043996411634]
l5=[1.9416457392298456, 1.4063914018063564, 0.0, 0.6298990173159601, 1.919381896770689, 0.8883426374075416, 1.1163757644713255, 1.4785546898087598, 0.0, 1.241303469475519, 0.766823697838633, 0.773737164488165, 1.646486325955998, 1.5504798753260336]
l6=[1.2811313176847492, 1.3464802582377597, 0.0, 0.46799349004473356, 1.6060695276779584, 0.3769648349884105, 0.9176990803840419, 0.8459240346529504, 0.0, 1.4610175349525585, 0.6080261934921762, 0.6921005753141164, 1.1580127553326416, 1.4168172873525409]
l7=[1.259114272324027, 0.6904142683273418, 1.2565193766693303, 0.7932465390451067, 0.6924190592637152, 0.46568297226965194, 0.06175411362683722, 1.2246894079640978, 1.2129702903887547, 1.8329347082104386, 1.0432224135567625, 0.825428119754272, 1.4049556960760539, 0.27088511763365275]
l8=[2.544915054398344, 2.0179062271710935, 0.3037020782525942, 2.723310435301852, 2.2097103135833347, 2.2112674834975, 1.4917321166526203, 2.0998393506742885, 1.8394172389796393, 1.4675826514515182, 2.0703288695321485, 1.646289533165106, 1.3400501267732388, 1.3280868855418566]

3dk9
l1=[0.8040876276982731, 0.0, 1.4281207127768036, 0.04442476184797428, 1.6125983412182359, 0.8461815115794038, 1.2419558645496216, 0.7083555499410357, 2.4712729788734036, 2.517175768914697, 0.4024552922406591, 1.4849885578384696, 0.6008825137425737, 1.2547510155287476, 2.6491860800191613, 1.229638169038115, 0.6514132139046841, 1.0235937093578957, 0.010715100649813881, 1.1920737661539613, 1.626974763598888, 1.7714353373797853, 0.9006188847915646, 0.2932646485173076, 1.7428682212522169, 1.0032337823698256, 1.9735031169063557, 1.0969610053263774, 0.0, 0.18115402057618799]
l2=[0.33260043443387055, 0.0, 0.044168196360934636, 0.0, 1.3822308500750682, 0.0, 0.37907984383460996, 0.10207862954100652, 1.7221182880590566, 2.362919968894548, 0.0, 0.9481124194058972, 0.0, 1.280850105195458, 1.9467327601809732, 0.07345191065692519, 0.07560952620031355, 0.8291901537804367, 0.0, 1.67652690087834, 0.09651930928450628, 0.7008363667887147, 0.5240082968614774, 0.9924158514429101, 0.8039201754833647, 0.6586666521665157, 1.695933892064703, 0.15367706104558376, 0.0, 0.9461697048609103]
l3=[0.36772452787891496, 0.0, 0.0, 0.0, 1.3434668807005923, 0.0, 0.48213897938521527, 0.07345191065692519, 1.64818397632753, 2.4095631911098154, 0.0, 0.7358976595597917, 0.0, 0.876577120598262, 1.9307405856732411, 0.06162488580103544, 0.06639874206324653, 0.7283972514572546, 0.0, 1.6628758557005778, 0.2878538737318808, 0.9221557892364334, 0.6581759965288349, 0.5346393030882739, 0.7777422338680485, 0.6909053231304442, 1.7445150571353543, 0.1279226160455182, 0.0, 0.8140809972948865]
l4=[0.414385889961999, 0.0, 0.03147906594716675, 0.0, 1.2948318602026458, 0.017475533760343134, 0.34536721393032777, 0.03494480184996647, 1.6787534461377172, 2.3269388542458294, 0.0, 0.7344543336947368, 0.0, 0.4552203853396303, 1.813777724782277, 0.07788250941109637, 0.06719688036269783, 0.6517560576960019, 0.0, 1.6978473055715175, 0.20663483215499517, 1.0507659707880062, 0.6978468149911978, 0.4232399756627022, 0.7563179615179816, 0.6995611636039895, 1.6176425191687571, 0.3295080078670122, 0.0, 0.745142669916346]
l5=[0.5163441538347383, 0.0, 0.044168196360934636, 0.0, 1.28490153517461, 0.0, 0.5977079422652258, 0.0, 1.457415473081448, 1.7210087991298617, 0.0, 0.6678828493793535, 0.0, 0.23016939538201261, 1.7417083157996878, 0.2649471958330617, 0.15443698201961806, 0.5517881610090696, 0.0, 1.577604782985669, 0.3065025335463808, 1.2884742472740178, 0.7763316873071991, 0.21203598334736976, 0.930911448791226, 0.9523041164897224, 1.792463266028384, 0.92844928559472, 0.0, 0.9809120709614652]
l6=[1.1340186436193473, 0.0, 0.0881431758379648, 0.0, 1.4357956446640896, 0.12503392347231718, 0.8815338568075863, 0.0, 1.2885445714167936, 1.0351937428822533, 0.0, 0.7970798089250739, 0.0, 0.044168196360934636, 1.4257628295825444, 0.6931471805599453, 0.19269937845195353, 0.5155134754113785, 0.0, 1.750797609546422, 0.35631208276691695, 1.7849860967693938, 1.3358872850699839, 0.4032195824824955, 1.1963352161360865, 1.353880599926273, 1.7877315934342228, 1.0121129097025532, 0.0, 0.9406316498618364]
l7=[0.0, 0.0, 0.017475533760343134, 0.0, 0.7308097236433831, 0.6589556806830628, 0.08743022193551855, 0.4278895518096714, 1.6526309682637927, 0.745306158835521, 0.0, 1.4206208034813017, 0.0, 1.0890688313812567, 0.2576409605265844, 0.044168196360934636, 0.0, 0.0, 0.0, 1.7136826120075053, 0.6244242013962025, 0.05240778852594545, 0.389806034968328, 0.5198559431196609, 0.9576661348422437, 0.5901863047735962, 0.2949416178437265, 0.0, 0.0, 0.5037501385110315]
l8=[0.9271217140723054, 0.0, 0.167944147734173, 0.0, 1.6145062903338818, 0.06719688036269783, 1.161560726669289, 1.2605221067000532, 1.7663700196772099, 1.86014493255878, 0.0, 1.8599857799892223, 0.0, 1.893171628460317, 2.6417821337814757, 0.33638900583602477, 0.24468321097713344, 1.262103573237301, 0.0, 1.8662544454138241, 0.7207618450591701, 2.389625304768272, 1.4342086600228185, 1.892298575732895, 1.3164798801183295, 1.884197194092336, 2.135282632310355, 0.625962736998454, 0.0, 1.595918812908636]

1zk4
l1=[0.0868775493189443, 1.146666562213169, 1.6415528578764285, 1.8648029773857746, 0.4063550967084315, 1.0545337085638236, 0.10015494126426096, 2.4279454217685976, 2.3321828552334876, 1.8894477889431927, 0.46369976309170186, 1.4397661042523677, 0.9407565515065122, 0.549538115953155, 0.5667590706181457, 2.179569788743213, 1.6405685382272668, 1.7603128642262742, 0.4480113903416446, 0.23681720895800143, 0.2118170687219537]
l2=[0.0, 0.0, 1.3144327194287446, 2.233193689429711, 0.017475533760343134, 0.6750789456176418, 0.0, 1.2458679836275457, 0.0, 2.2478692939999014, 1.3781669874303062, 1.2674179952689997, 1.4094189747802226, 0.07560952620031355, 0.0, 1.2118236431049083, 0.38108014705116866, 2.0013495942856516, 1.3873583346864977, 2.005359047877042, 1.9589556929226994]
l3=[0.0, 0.0, 1.352439384977124, 2.3810584963224786, 0.0, 0.7241990509340862, 0.0, 1.2680525647513323, 0.0, 2.145339406315642, 1.2552828747583482, 1.1326171242188934, 1.4240653798967902, 0.09532021140801197, 0.0, 1.5056872650740412, 0.510540487016376, 1.9671313483936335, 1.3537894136934618, 2.0642858344918653, 1.9862912543834044]
l4=[0.0, 0.0, 1.2596394887899456, 2.3533555157263106, 0.0, 0.6979353596622443, 0.0, 1.3156708270322914, 0.0, 2.084204580076677, 1.2208924069779936, 1.1932691499033836, 1.4280631570635132, 0.1349503714460772, 0.0, 1.3788130254885327, 0.4335397782404436, 1.993284839510322, 1.417107676661671, 2.0923895072870495, 2.003519198116019]
l5=[0.0, 0.0, 1.2268266642614278, 2.344890044773546, 0.03147906594716675, 0.8642408733341616, 0.0, 1.2871246865917552, 0.0, 2.23132466804727, 1.1150801750594237, 1.1668606886432558, 1.3889756611361677, 0.08827971711949555, 0.0, 1.6647857028637894, 0.5034028673914932, 2.075317811539521, 1.415087820682363, 2.24116452519968, 1.9849847840346415]
l6=[0.0, 0.0, 1.2907630497918443, 1.961926580688621, 0.017475533760343134, 1.4284700587889896, 0.0, 1.374799209788398, 0.0, 2.1805836479169467, 1.0880047902143306, 1.4451618212488035, 1.3052197279671491, 0.492845192529212, 0.017475533760343134, 1.354610768849326, 1.2461772677172311, 2.188067036849981, 0.670602952302447, 1.7740177197113511, 2.2309310334971943]
l7=[0.6108643020548935, 0.6087311527003456, 1.394834754496297, 0.9679796102014393, 0.0, 1.1851866433243199, 0.1517144790378862, 1.0121369946322074, 0.0, 0.20581156481190332, 0.1985152433458726, 0.6816087437667171, 1.8377969288534148, 0.08743022193551855, 1.875975589797642, 0.04894205262314573, 0.557141181473603, 1.5250787397722694, 1.042392028477264, 1.1694037317331136, 0.855076946597596]
l8=[0.04453791243977348, 0.0, 1.2308324913731954, 2.3737002989816918, 0.031746149071385094, 1.455863933944539, 0.0, 1.318393388891196, 0.0, 2.279671153090287, 0.21203588290771325, 0.991261911539782, 1.2990010426593461, 0.511571869209065, 0.0, 2.4155747554412805, 1.3360473852218604, 2.0957532358162543, 0.9558983177716678, 2.105897820348535, 1.6192664779101915]

xlabs=['native','1','1.5','2','3','5','fd','ref15cm']


             ALL CUSTOM HBOND PPS
1f4p
l1=[0.6549555919070708, 0.7322275419023341, 0.6281594398152193, 0.994110934478776, 0.7879280977408699, 0.768840776588932, 0.9238718178772798, 0.8826394374869383, 0.6003748669190416, 0.9653706074060049, 0.805609454451977, 0.6627928053470642, 0.5132695980883555, 0.9978594469169115, 0.8722169353778657, 0.5707984499539945, 0.8659560726040997, 0.8837559604118207, 0.7201565464573438]
l2=[0.7712788435679849, 0.7062307673655153, 0.5812566584820149, 0.994110934478776, 0.8237553602997987, 0.7175198794540579, 0.9522514779296161, 0.9348508017520146, 0.6220780334914093, 0.9653706074060049, 0.7872443979130789, 0.6806389371893669, 0.5266605538434512, 0.9978594469169115, 0.8661206408686306, 0.5982202250265731, 0.8470085946352103, 0.8682398296417532, 0.7286463631636984]
l3=[0.8398362998474491, 0.7120190164377331, 0.6135748605539415, 0.994110934478776, 0.7953177895389142, 0.691115464366061, 0.9462047708472129, 0.9463929113010603, 0.6200039320886715, 0.9653706074060049, 0.82176614047221, 0.6724173592180243, 0.5399943331158829, 0.9978594469169115, 0.8639188391767507, 0.5676385551252052, 0.8834934287220901, 0.8757428708288222, 0.7476839628113756]
l4=[0.8891577625523392, 0.7333718952436832, 0.578662858273669, 0.994110934478776, 0.7927706769962266, 0.6920219776167649, 0.9350387237392038, 0.9805200151879717, 0.6194139891054364, 0.9653706074060049, 0.817127091282155, 0.63538210630368, 0.5590903231052005, 0.9978594469169115, 0.8023697058803211, 0.5676403702236442, 0.8704423399505326, 0.8498726787424273, 0.7399737409741802]
l5=[0.9124829802177967, 0.622062619692941, 0.47707520609472764, 0.9933933478602479, 0.7892878841733466, 0.6884032182732263, 0.918015339238296, 0.9828888599670376, 0.598391392538417, 0.9653706074060049, 0.8407244043692711, 0.5822529019658516, 0.5392403314153794, 0.9978594469169115, 0.7368145791490861, 0.5713647400297831, 0.8235097707463069, 0.8005625634402186, 0.7696491021396118]
l6=[0.4083871285525238, 0.78230661731789, 0.6250057822318889, 0.9953003974540015, 0.5636716159502237, 0.8924681077871539, 0.5865208681612626, 0.814297961983111, 0.679953225109929, 0.965565386836005, 0.8690237312108998, 0.7137502194447389, 0.5459280854415358, 0.997369950652099, 0.734579172695216, 0.6291956672695507, 0.8754467668306325, 0.7705221601319335, 0.7168819720599493]

2xbn
l1=[0.5583036053268707, 0.795179353978081, 0.9821169431352174, 0.7432220613138911, 0.878738034938816, 0.8688278439251249, 0.7135646131537121, 0.5671970930362183, 0.3563504977975033, 0.8549847789621786, 0.5667067024073424, 0.6796705654838968, 0.7668975956554109, 0.40229438354859215]
l2=[0.5674774106747662, 0.7890282785258529, 0.9821169431352174, 0.697487400413548, 0.8705736816895864, 0.8580872612968553, 0.7099208590569699, 0.5703726728893472, 0.3497624898555114, 0.8444128843221352, 0.5634328055375777, 0.7947219233027993, 0.7977399659131922, 0.4095604648202178]
l3=[0.5682096886440389, 0.8070688847859461, 0.983482891305086, 0.6631258678557137, 0.8635003665966752, 0.7891394201437312, 0.742121208117305, 0.5499883187264342, 0.34975935360279464, 0.8478399447253022, 0.5573509188363968, 0.8646492510258078, 0.8090668486916988, 0.3962867387359099]
l4=[0.5561965708933555, 0.7721451070840014, 0.9821169431352174, 0.6391846869126023, 0.8398087801370924, 0.6648380357804835, 0.7837483846438736, 0.5730149617303022, 0.3425678933318069, 0.8672176662289737, 0.5453849483628872, 0.8857362874542185, 0.8414330250661519, 0.39895388602848547]
l5=[0.5083771430635127, 0.6755720601451758, 0.9821169431352174, 0.6210108198988202, 0.7275938090465034, 0.5046345353294936, 0.7944175695326787, 0.533764516335512, 0.3425678933318069, 0.7896701565847845, 0.5434932580595225, 0.9005182238846657, 0.8270042387302571, 0.40475836008779686]
l6=[0.6064297432145066, 0.839946993224182, 0.9743256673771178, 0.8228888205363284, 0.9103391680099439, 0.7698195295841608, 0.786790799075636, 0.6550313801115804, 0.3980364798270579, 0.9052327910042799, 0.5651025544926338, 0.6739034908092122, 0.6248481802481913, 0.38700339107212123]

3dk9
l1=[0.9529672032488535, 0.9914307255889335, 0.7610461127054062, 0.9928507946530606, 0.6328830846859371, 0.8633897085607297, 0.8458035963296642, 0.9423889947696285, 0.7274582737581057, 0.877232066180728, 0.9884486706510274, 0.9554380098542957, 0.9770817381161581, 0.6107674673915869, 0.7671434122205429, 0.8371720338340876, 0.9654182196172523, 0.9751576264402949, 0.9920895785763428, 0.7441795161004752, 0.6679778452541343, 0.7753175554836576, 0.9420873582536441, 0.9345945278058593, 0.7222464523263868, 0.9553118683665911, 0.8282255780089934, 0.9212871324650644, 0.9914307255889335, 0.9404817298798811]
l2=[0.9472505671705846, 0.9914307255889335, 0.7477074999201954, 0.9928507946530606, 0.6143539908219444, 0.8633897085607297, 0.866899819903684, 0.9466993766453119, 0.7360466315405663, 0.8837533169278498, 0.9884486706510274, 0.9379240539652309, 0.9770817381161581, 0.6278466638766373, 0.768749028963652, 0.8444956669114547, 0.9635393302546337, 0.9619952082010355, 0.9920895785763428, 0.6989627580524918, 0.6855601202703495, 0.7774688949267848, 0.9329770078106036, 0.971023686015445, 0.7142052818949063, 0.9580745996167455, 0.8382881303851164, 0.9162329789026794, 0.9914307255889335, 0.9464760238695434]
l3=[0.9529139788538602, 0.9914307255889335, 0.7570694142233224, 0.9928507946530606, 0.6026759894582574, 0.864968106687819, 0.8499046670009603, 0.9478607625287241, 0.7217011655776553, 0.8567007920989596, 0.9884486706510274, 0.9291058959550993, 0.9770817381161581, 0.6190487634813682, 0.7620929427139445, 0.8322543826895015, 0.9641055984346705, 0.9770962969732435, 0.9920895785763428, 0.6794331770427527, 0.6817796116633339, 0.7799214614917434, 0.9418013439165974, 0.9820273853498757, 0.732649029343463, 0.9526903744669615, 0.8286459533849767, 0.9122531477518718, 0.9914307255889335, 0.9511791144824909]
l4=[0.9609706799590296, 0.9914307255889335, 0.7610461127054062, 0.9928507946530606, 0.5710778399316083, 0.8633897085607297, 0.8686870817712047, 0.9442004482728737, 0.6967582348440877, 0.7261028818632769, 0.9884486706510274, 0.8791655898447029, 0.9770817381161581, 0.621821648301226, 0.7420869873196464, 0.836660578062394, 0.9701539578483391, 0.9617911175901964, 0.9920895785763428, 0.6400375009709638, 0.681341786152657, 0.7808671153745954, 0.9223847958100326, 0.9891570873954265, 0.7267764799492057, 0.9516210994583532, 0.8305429632487021, 0.8178501056931399, 0.9914307255889335, 0.91112521882727]
l5=[0.9527608663953793, 0.9914307255889335, 0.7745378514006751, 0.9928507946530606, 0.547922192916207, 0.8734798715172261, 0.884060103186192, 0.9442004482728737, 0.6865047058915967, 0.6043974416753723, 0.9884486706510274, 0.8652007361033737, 0.9770817381161581, 0.6204283155196038, 0.7208184596761933, 0.7173794309827931, 0.9743091588538104, 0.9576795107352611, 0.9920895785763428, 0.5869205167189834, 0.6919038233820407, 0.6834516206090416, 0.8204344742003845, 0.9651399802387076, 0.7732196632021462, 0.8672158208129512, 0.8577919671906841, 0.5036962419820793, 0.9914307255889335, 0.861135087415865]
l6=[0.974795279398381, 0.9914307255889335, 0.7974970413048701, 0.9928507946530606, 0.5596611383396585, 0.8830379252539662, 0.890918483617748, 0.8712806833667437, 0.7022754726212739, 0.8563770681742897, 0.9884486706510274, 0.8078086102192206, 0.9770817381161581, 0.5142273312199277, 0.8855220632410363, 0.8821492803028441, 0.9699610260930699, 0.8979747481114454, 0.9920895785763428, 0.6229232752093745, 0.7239092109200433, 0.8006377661596078, 0.800440618161403, 0.7022486909813535, 0.773496970480219, 0.8119540165017176, 0.8174806782306338, 0.9297718893262912, 0.9914307255889335, 0.46553409629319975]

3s6f
l1=[0.7363208359033113, 0.44994135922836975, 0.862792514659936, 0.8262046739311166, 0.9132908135792942, 0.5753829303725257, 0.9722689288318668, 0.9358836744356628, 0.8221990521386456, 0.8237005337692469, 0.613330925336094, 0.8951469800125108, 0.9559821409363818, 0.8076885686423029]
l2=[0.7273726571672173, 0.40954203804288003, 0.863460034414845, 0.8371568415273438, 0.9109079192287989, 0.5690818892714472, 0.9722689288318668, 0.9358836744356628, 0.8314744408069419, 0.8321588078220247, 0.6091475809813722, 0.8981725889032912, 0.9501927021515476, 0.8231265027959632]
l3=[0.7366703933652248, 0.41259788932061237, 0.8904216857871126, 0.8555572516593142, 0.9024263629338646, 0.6049569452637921, 0.9722689288318668, 0.9358836744356628, 0.8537017934840663, 0.8767822860559387, 0.6689242059373487, 0.8999242209371476, 0.9231061830887348, 0.8036539700508492]
l4=[0.7540306370811329, 0.4162065889716583, 0.8475250860456697, 0.8852965761674942, 0.7357324721296651, 0.6568706491002734, 0.9722689288318668, 0.9358836744356628, 0.7792026318362504, 0.7751866633148642, 0.7163289426176083, 0.9260452326354205, 0.8809148958609225, 0.827549379837944]
l5=[0.7982928615056648, 0.4056052090712199, 0.46765112605496306, 0.9181435764294948, 0.6216583724329419, 0.7659550196867391, 0.9737328161831529, 0.9397747478347603, 0.7148532589948838, 0.6312381562110456, 0.6735561081749163, 0.916830113517108, 0.8313502120176965, 0.7621062303365275]
l6=[0.7987119770989284, 0.54936429115645, 0.884120703136515, 0.596940201275123, 0.8867046865579594, 0.7495462618336546, 0.976592080675878, 0.9807506548646155, 0.6830561472978149, 0.9096529437604646, 0.7233716871135416, 0.9217368757171385, 0.7489419712556702, 0.7846813676006851]

1zk4
l1=[0.9881684652796879, 0.7042118668999933, 0.7997289356140909, 0.7296517535302509, 0.9906037589119667, 0.8763414897161113, 0.9884226359745666, 0.7769461102151347, 0.6150415365896966, 0.8635037954793773, 0.8964640993686489, 0.5636210094115919, 0.8208062336062725, 0.9832495621097869, 0.9672954718599777, 0.9322106396081191, 0.8659372998239806, 0.8325966274848178, 0.6736155156304556, 0.6272637872183828, 0.6230357768261928]
l2=[0.9881684652796879, 0.7042118668999933, 0.8184301942040995, 0.7049610925398279, 0.9892113241178099, 0.8867565597577852, 0.9884226359745666, 0.7755789033117462, 0.6150415365896966, 0.848757664589386, 0.9139024101414186, 0.5647151236052009, 0.8073346111932792, 0.9820889423528614, 0.9672954718599777, 0.939822423817993, 0.8809996447431543, 0.8276658297513013, 0.6799901574448208, 0.6475191200461614, 0.6292640923621386]
l3=[0.9881684652796879, 0.7042118668999933, 0.7990306197942876, 0.6875570623001788, 0.9892113241178099, 0.8799614966908846, 0.9884226359745666, 0.7832022890287194, 0.6150415365896966, 0.8447733568094021, 0.9097622960879046, 0.5530378763453918, 0.848816979262534, 0.9829226783091688, 0.9672954718599777, 0.9237625446988443, 0.8660461998811919, 0.8311830860990681, 0.7203032269892242, 0.6115929703612997, 0.6291954279916723]
l4=[0.9881684652796879, 0.7042118668999933, 0.7680022876343955, 0.7128607121361119, 0.9914929956039553, 0.866369563353527, 0.9884226359745666, 0.7802907445790609, 0.6150415365896966, 0.8217484234396536, 0.8789937407930237, 0.5725017098366166, 0.8271135977733781, 0.9839966125535117, 0.9672954718599777, 0.8568324360901644, 0.8746938785479916, 0.8476794837237759, 0.8309463148593601, 0.6495034553985933, 0.6092547910167567]
l5=[0.9881684652796879, 0.7042118668999933, 0.8170244743740869, 0.696089923888633, 0.9906037589119667, 0.7268867818328306, 0.9884226359745666, 0.7967835439101029, 0.6150415365896966, 0.8351791858419232, 0.8561678429560622, 0.6196660110563748, 0.8719392892506646, 0.9653028974007881, 0.9670697848962088, 0.56842416764329, 0.8698806425458547, 0.8237148750956526, 0.9677077365040774, 0.5522714896440868, 0.5101687180177514]
l6=[0.9893545979644287, 0.7043521866921539, 0.8045609022791421, 0.7892376256802189, 0.9915136334755053, 0.7821863802872835, 0.9883139074318278, 0.780687646367562, 0.6155111991832604, 0.7311493906034744, 0.9769244669416657, 0.6201857004368785, 0.6074899259112407, 0.9646518321220913, 0.967325996971876, 0.8062888746376929, 0.9010455873225546, 0.8474876702570462, 0.582880278672484, 0.7373692504763221, 0.395261461929001]

xlabs=['1','1.5','2','3','5','Ref15 Designs']


FASTDESIGN PPS VALUES
# 1f4p
l1=[0.35149934082162404, 0.49493816723733286, 0.4384474451037581, 0.994110934478776, 0.6336033689733611, 0.5685652787098262, 0.9147690605451285, 0.9767815386827643, 0.558572938476404, 0.9653706074060049, 0.8511835053148703, 0.4407457692498904, 0.43093359923614016, 0.9978594469169115, 0.9433046764093367, 0.47700631116652026, 0.44534971917874877, 0.9109287112356904, 0.9132608432368885]
a1=[0.34937824916609805, 0.5064455996837115, 0.4560285119697802, 0.994110934478776, 0.7469926419484203, 0.38263356830268513, 0.5761389291592882, 0.9771784570787727, 0.6789135765238015, 0.9653706074060049, 0.8498563207762806, 0.45642249642418775, 0.43093359923614016, 0.995907931616692, 0.921734982418064, 0.4790383633757256, 0.5068573401551175, 0.9109287112356904, 0.8917841003966644]
# 3r2q
l2=[0.42467168809431344, 0.521959169774243, 0.6985695740101807, 0.5829621284547255, 0.5241644490918724, 0.5945499540717044, 0.6513067293138217, 0.9882075610866552, 0.6897647163902438, 0.45049017297587224, 0.7441784454710697]
a2=[0.46034062373616846, 0.8227557701686165, 0.724702502756867, 0.6179503066011179, 0.624516488503891, 0.47778937529720544, 0.8868719337536619, 0.9923218355165637, 0.6851920381889711, 0.4196782082788355, 0.5848047171309331]
# 3dlc
l3=[0.36175329844677495, 0.7198026377216262, 0.9563088742229886, 0.5486018562811581, 0.9856747889468176, 0.8227038244083275, 0.6260469232799678, 0.9494680325387125, 0.5817296363345754, 0.906247555006387, 0.6423806516985766, 0.7707770942628593, 0.5772046443640046, 0.5271259825146639, 0.5138198651874308, 0.43848987362414615, 0.7477255412562669, 0.5926718367033619, 0.4770410862245882]
a3=[0.36929518747469725, 0.6475782299408188, 0.9563088742229886, 0.5465084516313278, 0.987474749964439, 0.5667953588173098, 0.5843797904805312, 0.9494680325387125, 0.7179420296708865, 0.8784499371200416, 0.8669831406853481, 0.5698699825709383, 0.5406563185806875, 0.5271259825146639, 0.5396237847004808, 0.5026608477007408, 0.8814302912998806, 0.6725219133613805, 0.4770410862245882]
# 2xbn
l4=[0.4049506406274499, 0.6562537603883978, 0.765020202793179, 0.4667119522256966, 0.6572338674762397, 0.5070729834228085, 0.5612411922211433, 0.5475346380556969, 0.3962974164139874, 0.8613095856958067, 0.6496972264066934, 0.6901799385184129, 0.8478360925426064, 0.37043942257421036]
a4=[0.44093873785297044, 0.6401921942476996, 0.47725821903370835, 0.4651372537072662, 0.679682386898103, 0.547251859219181, 0.5679983845672918, 0.4771466461291777, 0.33661884248686214, 0.6095152510608758, 0.5284788377725496, 0.7049200600849261, 0.42336025109422604, 0.36350163011483305]
# 3dk9
l5=[0.9017044261069261, 0.9914307255889335, 0.71254143838786, 0.9928507946530606, 0.45080715030972685, 0.9887715785437816, 0.7718466514264825, 0.9244293665523164, 0.7066801048204221, 0.6176616040616398, 0.9884486706510274, 0.7750293519011134, 0.9770817381161581, 0.37630964246976084, 0.5205433745201581, 0.832601823179973, 0.9573654653572929, 0.9261960297235122, 0.9920895785763428, 0.5038518991022017, 0.7317305597249206, 0.3744739093208609, 0.5474561391723474, 0.4926575142732651, 0.8448913106675102, 0.4022224610566817, 0.8769587389574304, 0.9133198777758638, 0.9914307255889335, 0.35224404900904016]
a5=[0.9017304186452275, 0.9912385339264406, 0.72186073818227, 0.9926893837192414, 0.43261652090482894, 0.8999195687312154, 0.6634327545938281, 0.9108490881911591, 0.770635744350731, 0.6680810275131626, 0.9884774717781512, 0.45635082543083294, 0.9771881148723445, 0.3837428419998232, 0.6767661601420281, 0.6171612692601451, 0.9574209030784193, 0.5048989409748481, 0.9919051995589326, 0.4715666726771919, 0.6731294259766138, 0.4994447474961886, 0.5147265298417601, 0.3539733854847229, 0.8243103318182293, 0.4114154075099803, 0.7158414262472935, 0.9157969196480796, 0.9912385339264406, 0.3406550378334754]
# 3s6f
l6=[0.7313096659560778, 0.5089603084679116, 0.854860990617055, 0.7966840839318334, 0.6579643838521345, 0.48607140580667485, 0.9722689288318668, 0.9467971219710587, 0.5050688389740253, 0.7375442321011207, 0.5332883036865201, 0.8989471024668699, 0.6328367000093869, 0.7775546345652864]
a6=[0.7273726571672173, 0.40153184265997965, 0.854860990617055, 0.8219870228540165, 0.8605953402619708, 0.47426725163031414, 0.9722689288318668, 0.5714686333590606, 0.47299014081605284, 0.7813124224255483, 0.6479352041287625, 0.8951469800125108, 0.7849263363861021, 0.5684771295751929]
# 1zk4
l7=[0.6805673724107332, 0.9130911600830992, 0.6043941182619473, 0.48586585530750714, 0.9892113241178099, 0.9014092715511826, 0.9857609954432053, 0.75247693450465, 0.6150415365896966, 0.5565608815293278, 0.9905689766090554, 0.7891642949050097, 0.582485000062117, 0.9836902939602284, 0.515096432774774, 0.6671174188026142, 0.8725336577014651, 0.8010367384280165, 0.4016697877029809, 0.43990313641354395, 0.34283669756177315]
a7=[0.9825203960162102, 0.85582395729459, 0.5599702483228746, 0.6824452039958331, 0.9108703907644, 0.8905419554316404, 0.9635904784824221, 0.6266525350933135, 0.6372505913801134, 0.47672902673626516, 0.9738756544254866, 0.7907364290503096, 0.45746742042908695, 0.9789380865583693, 0.506573242144311, 0.6882991467909634, 0.875597276265123, 0.7537063647051656, 0.37487244964901567, 0.8814506274905666, 0.33995058407417666]



PREFERRED CHEMISTRIES

1f4p
l1=[('polar', 421.6666666666667), ('polar', 1.8021108179419525), ('polar', 9.073394495412844), ('glycine', 43.92857142857143), ('polar', 9.20183486238532), ('hydrophobic', 1.4534653465346534), ('polar', 3.7787234042553193), ('polar', 58.61904761904762), ('aromatic', 1.9394812680115274), ('glycine', 17.476190476190474), ('charged', 2.0632183908045976), ('polar', 2.9178082191780823), ('hydrophobic', 9.130434782608695), ('glycine', 179.71428571428572), ('charged', 2.782089552238806), ('aromatic', 17.793650793650794), ('charged', 1.8056426332288402), ('aromatic', 252.0), ('hydrophobic', 2.4164383561643836)]
2xbn
l2=('glycine', 1.3023519410597904), ('polar', 1.9467951403435275), ('glycine', 25.642633228840126), ('polar', 1.0057288351368554), ('hydrophobic', 2.713343480466768), ('aromatic', 4.301980198019802), ('polar', 1.4617583988563259), ('polar', 1.027981345769487), ('charged', 580.8666666666667), ('hydrophobic', 15.43574297188755), ('aromatic', 3.5810234541577826), ('polar', 4.202594193946881), ('polar', 5.9749784296807595), ('charged', 126.5)]
3dk9
l3=[('hydrophobic', 543.0), ('glycine', 3265.0), ('glycine', 1.1703499079189688), ('glycine', 190.88235294117646), ('proline', 1.250620347394541), ('glycine', 1.8692515779981966), ('hydrophobic', 31.54), ('charged', 38.24691358024691), ('charged', 3.7945492662473796), ('charged', 2.5719178082191783), ('glycine', 30.03960396039604), ('polar', 2.9861687413554634), ('glycine', 14.277227722772277), ('polar', 3.225634178905207), ('charged', 2.0737704918032787), ('hydrophobic', 1.481203007518797), ('hydrophobic', 8.330434782608696), ('polar', 4.3552188552188555), ('glycine', 1087.0), ('polar', 10.243542435424354), ('hydrophobic', 2.0814070351758795), ('hydrophobic', 1.2635350318471337), ('hydrophobic', 17.113636363636363), ('charged', 64.77551020408163), ('hydrophobic', 1.1665510062456628), ('charged', 10.163498098859316), ('polar', 3.508256880733945), ('hydrophobic', 16.19148936170213), ('glycine', 3265.0), ('charged', 65.14285714285714)]
3s6f
l4=[('hydrophobic', 6.220689655172414), ('hydrophobic', 3.4524940617577196), ('hydrophobic', 4.761969904240766), ('charged', 1.5689764780673872), ('glycine', 2.3294460641399417), ('charged', 1.5208333333333333), ('glycine', 11.018018018018019), ('glycine', 4.413702239789196), ('charged', 1.1537978656622725), ('charged', 1.7497546614327772), ('hydrophobic', 4.0553892215568865), ('aromatic', 3.1957403651115617), ('aromatic', 94.25), ('charged', 3.4062140391254316)]
1zk4
l5=[('glycine', 91.78867924528302), ('hydrophobic', 1.901567720380365), ('polar', 2.691761628993088), ('polar', 1.3660100244783775), ('glycine', 37.259319286871964), ('hydrophobic', 20.95923913043478), ('glycine', 80.13201320132013), ('hydrophobic', 2.137474351800037), ('hydrophobic', 2.021820917983446), ('charged', 4.028797145769623), ('charged', 12.488167308750688), ('hydrophobic', 33.37626628075253), ('polar', 5.9737978692772815), ('hydrophobic', 32.43854748603352), ('glycine', 10.125880695162047), ('hydrophobic', 7.0164328657314625), ('hydrophobic', 2.9296259842519685), ('hydrophobic', 4.231813125695217), ('polar', 31.634746922024625), ('aromatic', 106.50442477876106), ('charged', 47.13921568627451)]

'''
#1zk4
s1zk4=[0.0868775493189443, 1.146666562213169, 1.6415528578764285, 1.8648029773857746, 0.4063550967084315, 1.0545337085638236, 0.10015494126426096, 2.4279454217685976, 2.3321828552334876, 1.8894477889431927, 0.46369976309170186, 1.4397661042523677, 0.9407565515065122, 0.549538115953155, 0.5667590706181457, 2.179569788743213, 1.6405685382272668, 1.7603128642262742, 0.4480113903416446, 0.23681720895800143, 0.2118170687219537]
chem1zk4=[('glycine', 91.78867924528302), ('hydrophobic', 1.901567720380365), ('polar', 2.691761628993088), ('polar', 1.3660100244783775), ('glycine', 37.259319286871964), ('hydrophobic', 20.95923913043478), ('glycine', 80.13201320132013), ('hydrophobic', 2.137474351800037), ('hydrophobic', 2.021820917983446), ('charged', 4.028797145769623), ('charged', 12.488167308750688), ('hydrophobic', 33.37626628075253), ('polar', 5.9737978692772815), ('hydrophobic', 32.43854748603352), ('glycine', 10.125880695162047), ('hydrophobic', 7.0164328657314625), ('hydrophobic', 2.9296259842519685), ('hydrophobic', 4.231813125695217), ('polar', 31.634746922024625), ('aromatic', 106.50442477876106), ('charged', 47.13921568627451)]

l1=[0.9881684652796879, 0.7042118668999933, 0.7997289356140909, 0.7296517535302509, 0.9906037589119667, 0.8763414897161113, 0.9884226359745666, 0.7769461102151347, 0.6150415365896966, 0.8635037954793773, 0.8964640993686489, 0.5636210094115919, 0.8208062336062725, 0.9832495621097869, 0.9672954718599777, 0.9322106396081191, 0.8659372998239806, 0.8325966274848178, 0.6736155156304556, 0.6272637872183828, 0.6230357768261928]
l2=[0.9881684652796879, 0.7042118668999933, 0.8184301942040995, 0.7049610925398279, 0.9892113241178099, 0.8867565597577852, 0.9884226359745666, 0.7755789033117462, 0.6150415365896966, 0.848757664589386, 0.9139024101414186, 0.5647151236052009, 0.8073346111932792, 0.9820889423528614, 0.9672954718599777, 0.939822423817993, 0.8809996447431543, 0.8276658297513013, 0.6799901574448208, 0.6475191200461614, 0.6292640923621386]
l3=[0.9881684652796879, 0.7042118668999933, 0.7990306197942876, 0.6875570623001788, 0.9892113241178099, 0.8799614966908846, 0.9884226359745666, 0.7832022890287194, 0.6150415365896966, 0.8447733568094021, 0.9097622960879046, 0.5530378763453918, 0.848816979262534, 0.9829226783091688, 0.9672954718599777, 0.9237625446988443, 0.8660461998811919, 0.8311830860990681, 0.7203032269892242, 0.6115929703612997, 0.6291954279916723]
l4=[0.9881684652796879, 0.7042118668999933, 0.7680022876343955, 0.7128607121361119, 0.9914929956039553, 0.866369563353527, 0.9884226359745666, 0.7802907445790609, 0.6150415365896966, 0.8217484234396536, 0.8789937407930237, 0.5725017098366166, 0.8271135977733781, 0.9839966125535117, 0.9672954718599777, 0.8568324360901644, 0.8746938785479916, 0.8476794837237759, 0.8309463148593601, 0.6495034553985933, 0.6092547910167567]
l5=[0.9881684652796879, 0.7042118668999933, 0.8170244743740869, 0.696089923888633, 0.9906037589119667, 0.7268867818328306, 0.9884226359745666, 0.7967835439101029, 0.6150415365896966, 0.8351791858419232, 0.8561678429560622, 0.6196660110563748, 0.8719392892506646, 0.9653028974007881, 0.9670697848962088, 0.56842416764329, 0.8698806425458547, 0.8237148750956526, 0.9677077365040774, 0.5522714896440868, 0.5101687180177514]
l6=[0.9893545979644287, 0.7043521866921539, 0.8045609022791421, 0.7892376256802189, 0.9915136334755053, 0.7821863802872835, 0.9883139074318278, 0.780687646367562, 0.6155111991832604, 0.7311493906034744, 0.9769244669416657, 0.6201857004368785, 0.6074899259112407, 0.9646518321220913, 0.967325996971876, 0.8062888746376929, 0.9010455873225546, 0.8474876702570462, 0.582880278672484, 0.7373692504763221, 0.395261461929001]
l7=[0.6805673724107332, 0.9130911600830992, 0.6043941182619473, 0.48586585530750714, 0.9892113241178099, 0.9014092715511826, 0.9857609954432053, 0.75247693450465, 0.6150415365896966, 0.5565608815293278, 0.9905689766090554, 0.7891642949050097, 0.582485000062117, 0.9836902939602284, 0.515096432774774, 0.6671174188026142, 0.8725336577014651, 0.8010367384280165, 0.4016697877029809, 0.43990313641354395, 0.34283669756177315]
l8=[0.9825203960162102, 0.85582395729459, 0.5599702483228746, 0.6824452039958331, 0.9108703907644, 0.8905419554316404, 0.9635904784824221, 0.6266525350933135, 0.6372505913801134, 0.47672902673626516, 0.9738756544254866, 0.7907364290503096, 0.45746742042908695, 0.9789380865583693, 0.506573242144311, 0.6882991467909634, 0.875597276265123, 0.7537063647051656, 0.37487244964901567, 0.8814506274905666, 0.33995058407417666]

#
for index,s in enumerate(s1zk4):
    if s<=1.0:
        low_cm1.append(l1[index])
        low_cm15.append(l2[index])
        low_cm2.append(l3[index])
        low_cm3.append(l4[index])
        low_cm5.append(l5[index])
        low_cmref.append(l6[index])
        low_fd.append(l7[index])
        low_fdref.append(l8[index])
for index,s in enumerate(s1zk4):
    if 1.0<s<=2.0:
        med_cm1.append(l1[index])
        med_cm15.append(l2[index])
        med_cm2.append(l3[index])
        med_cm3.append(l4[index])
        med_cm5.append(l5[index])
        med_cmref.append(l6[index])
        med_fd.append(l7[index])
        med_fdref.append(l8[index])
for index,s in enumerate(s1zk4):
    if s>2.0:
        hi_cm1.append(l1[index])
        hi_cm15.append(l2[index])
        hi_cm2.append(l3[index])
        hi_cm3.append(l4[index])
        hi_cm5.append(l5[index])
        hi_cmref.append(l6[index])
        hi_fd.append(l7[index])
        hi_fdref.append(l8[index])

#
for index,entry in enumerate(chem1zk4):
    if entry[0]=='polar':
        pol_cm1.append(l1[index])
        pol_cm15.append(l2[index])
        pol_cm2.append(l3[index])
        pol_cm3.append(l4[index])
        pol_cm5.append(l5[index])
        pol_cmref.append(l6[index])
        pol_fd.append(l7[index])
        pol_fdref.append(l8[index])
    elif entry[0]=='hydrophobic':
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    elif entry[0]=='aromatic':
        ar_cm1.append(l1[index])
        ar_cm15.append(l2[index])
        ar_cm2.append(l3[index])
        ar_cm3.append(l4[index])
        ar_cm5.append(l5[index])
        ar_cmref.append(l6[index])
        ar_fd.append(l7[index])
        ar_fdref.append(l8[index])
    elif entry[0]=='charged':
        q_cm1.append(l1[index])
        q_cm15.append(l2[index])
        q_cm2.append(l3[index])
        q_cm3.append(l4[index])
        q_cm5.append(l5[index])
        q_cmref.append(l6[index])
        q_fd.append(l7[index])
        q_fdref.append(l8[index])
    elif entry[0]=='glycine':
        gly_cm1.append(l1[index])
        gly_cm15.append(l2[index])
        gly_cm2.append(l3[index])
        gly_cm3.append(l4[index])
        gly_cm5.append(l5[index])
        gly_cmref.append(l6[index])
        gly_fd.append(l7[index])
        gly_fdref.append(l8[index])
    elif entry[0]=='proline':   #there is only 1 position for 1 strc which prefers pro, so ill just include with np
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    else:
        print('uh oh...')

#3dk9
s3dk9=[0.8040876276982731, 0.0, 1.4281207127768036, 0.04442476184797428, 1.6125983412182359, 0.8461815115794038, 1.2419558645496216, 0.7083555499410357, 2.4712729788734036, 2.517175768914697, 0.4024552922406591, 1.4849885578384696, 0.6008825137425737, 1.2547510155287476, 2.6491860800191613, 1.229638169038115, 0.6514132139046841, 1.0235937093578957, 0.010715100649813881, 1.1920737661539613, 1.626974763598888, 1.7714353373797853, 0.9006188847915646, 0.2932646485173076, 1.7428682212522169, 1.0032337823698256, 1.9735031169063557, 1.0969610053263774, 0.0, 0.18115402057618799]
chem3dk9=[('hydrophobic', 543.0), ('glycine', 3265.0), ('glycine', 1.1703499079189688), ('glycine', 190.88235294117646), ('proline', 1.250620347394541), ('glycine', 1.8692515779981966), ('hydrophobic', 31.54), ('charged', 38.24691358024691), ('charged', 3.7945492662473796), ('charged', 2.5719178082191783), ('glycine', 30.03960396039604), ('polar', 2.9861687413554634), ('glycine', 14.277227722772277), ('polar', 3.225634178905207), ('charged', 2.0737704918032787), ('hydrophobic', 1.481203007518797), ('hydrophobic', 8.330434782608696), ('polar', 4.3552188552188555), ('glycine', 1087.0), ('polar', 10.243542435424354), ('hydrophobic', 2.0814070351758795), ('hydrophobic', 1.2635350318471337), ('hydrophobic', 17.113636363636363), ('charged', 64.77551020408163), ('hydrophobic', 1.1665510062456628), ('charged', 10.163498098859316), ('polar', 3.508256880733945), ('hydrophobic', 16.19148936170213), ('glycine', 3265.0), ('charged', 65.14285714285714)]

l1=[0.9529672032488535, 0.9914307255889335, 0.7610461127054062, 0.9928507946530606, 0.6328830846859371, 0.8633897085607297, 0.8458035963296642, 0.9423889947696285, 0.7274582737581057, 0.877232066180728, 0.9884486706510274, 0.9554380098542957, 0.9770817381161581, 0.6107674673915869, 0.7671434122205429, 0.8371720338340876, 0.9654182196172523, 0.9751576264402949, 0.9920895785763428, 0.7441795161004752, 0.6679778452541343, 0.7753175554836576, 0.9420873582536441, 0.9345945278058593, 0.7222464523263868, 0.9553118683665911, 0.8282255780089934, 0.9212871324650644, 0.9914307255889335, 0.9404817298798811]
l2=[0.9472505671705846, 0.9914307255889335, 0.7477074999201954, 0.9928507946530606, 0.6143539908219444, 0.8633897085607297, 0.866899819903684, 0.9466993766453119, 0.7360466315405663, 0.8837533169278498, 0.9884486706510274, 0.9379240539652309, 0.9770817381161581, 0.6278466638766373, 0.768749028963652, 0.8444956669114547, 0.9635393302546337, 0.9619952082010355, 0.9920895785763428, 0.6989627580524918, 0.6855601202703495, 0.7774688949267848, 0.9329770078106036, 0.971023686015445, 0.7142052818949063, 0.9580745996167455, 0.8382881303851164, 0.9162329789026794, 0.9914307255889335, 0.9464760238695434]
l3=[0.9529139788538602, 0.9914307255889335, 0.7570694142233224, 0.9928507946530606, 0.6026759894582574, 0.864968106687819, 0.8499046670009603, 0.9478607625287241, 0.7217011655776553, 0.8567007920989596, 0.9884486706510274, 0.9291058959550993, 0.9770817381161581, 0.6190487634813682, 0.7620929427139445, 0.8322543826895015, 0.9641055984346705, 0.9770962969732435, 0.9920895785763428, 0.6794331770427527, 0.6817796116633339, 0.7799214614917434, 0.9418013439165974, 0.9820273853498757, 0.732649029343463, 0.9526903744669615, 0.8286459533849767, 0.9122531477518718, 0.9914307255889335, 0.9511791144824909]
l4=[0.9609706799590296, 0.9914307255889335, 0.7610461127054062, 0.9928507946530606, 0.5710778399316083, 0.8633897085607297, 0.8686870817712047, 0.9442004482728737, 0.6967582348440877, 0.7261028818632769, 0.9884486706510274, 0.8791655898447029, 0.9770817381161581, 0.621821648301226, 0.7420869873196464, 0.836660578062394, 0.9701539578483391, 0.9617911175901964, 0.9920895785763428, 0.6400375009709638, 0.681341786152657, 0.7808671153745954, 0.9223847958100326, 0.9891570873954265, 0.7267764799492057, 0.9516210994583532, 0.8305429632487021, 0.8178501056931399, 0.9914307255889335, 0.91112521882727]
l5=[0.9527608663953793, 0.9914307255889335, 0.7745378514006751, 0.9928507946530606, 0.547922192916207, 0.8734798715172261, 0.884060103186192, 0.9442004482728737, 0.6865047058915967, 0.6043974416753723, 0.9884486706510274, 0.8652007361033737, 0.9770817381161581, 0.6204283155196038, 0.7208184596761933, 0.7173794309827931, 0.9743091588538104, 0.9576795107352611, 0.9920895785763428, 0.5869205167189834, 0.6919038233820407, 0.6834516206090416, 0.8204344742003845, 0.9651399802387076, 0.7732196632021462, 0.8672158208129512, 0.8577919671906841, 0.5036962419820793, 0.9914307255889335, 0.861135087415865]
l6=[0.974795279398381, 0.9914307255889335, 0.7974970413048701, 0.9928507946530606, 0.5596611383396585, 0.8830379252539662, 0.890918483617748, 0.8712806833667437, 0.7022754726212739, 0.8563770681742897, 0.9884486706510274, 0.8078086102192206, 0.9770817381161581, 0.5142273312199277, 0.8855220632410363, 0.8821492803028441, 0.9699610260930699, 0.8979747481114454, 0.9920895785763428, 0.6229232752093745, 0.7239092109200433, 0.8006377661596078, 0.800440618161403, 0.7022486909813535, 0.773496970480219, 0.8119540165017176, 0.8174806782306338, 0.9297718893262912, 0.9914307255889335, 0.46553409629319975]
l7=[0.9017044261069261, 0.9914307255889335, 0.71254143838786, 0.9928507946530606, 0.45080715030972685, 0.9887715785437816, 0.7718466514264825, 0.9244293665523164, 0.7066801048204221, 0.6176616040616398, 0.9884486706510274, 0.7750293519011134, 0.9770817381161581, 0.37630964246976084, 0.5205433745201581, 0.832601823179973, 0.9573654653572929, 0.9261960297235122, 0.9920895785763428, 0.5038518991022017, 0.7317305597249206, 0.3744739093208609, 0.5474561391723474, 0.4926575142732651, 0.8448913106675102, 0.4022224610566817, 0.8769587389574304, 0.9133198777758638, 0.9914307255889335, 0.35224404900904016]
l8=[0.9017304186452275, 0.9912385339264406, 0.72186073818227, 0.9926893837192414, 0.43261652090482894, 0.8999195687312154, 0.6634327545938281, 0.9108490881911591, 0.770635744350731, 0.6680810275131626, 0.9884774717781512, 0.45635082543083294, 0.9771881148723445, 0.3837428419998232, 0.6767661601420281, 0.6171612692601451, 0.9574209030784193, 0.5048989409748481, 0.9919051995589326, 0.4715666726771919, 0.6731294259766138, 0.4994447474961886, 0.5147265298417601, 0.3539733854847229, 0.8243103318182293, 0.4114154075099803, 0.7158414262472935, 0.9157969196480796, 0.9912385339264406, 0.3406550378334754]

#
for index,s in enumerate(s3dk9):
    if s<=1.0:
        low_cm1.append(l1[index])
        low_cm15.append(l2[index])
        low_cm2.append(l3[index])
        low_cm3.append(l4[index])
        low_cm5.append(l5[index])
        low_cmref.append(l6[index])
        low_fd.append(l7[index])
        low_fdref.append(l8[index])
for index,s in enumerate(s3dk9):
    if 1.0<s<=2.0:
        med_cm1.append(l1[index])
        med_cm15.append(l2[index])
        med_cm2.append(l3[index])
        med_cm3.append(l4[index])
        med_cm5.append(l5[index])
        med_cmref.append(l6[index])
        med_fd.append(l7[index])
        med_fdref.append(l8[index])
for index,s in enumerate(s3dk9):
    if s>2.0:
        hi_cm1.append(l1[index])
        hi_cm15.append(l2[index])
        hi_cm2.append(l3[index])
        hi_cm3.append(l4[index])
        hi_cm5.append(l5[index])
        hi_cmref.append(l6[index])
        hi_fd.append(l7[index])
        hi_fdref.append(l8[index])

#
for index,entry in enumerate(chem3dk9):
    if entry[0]=='polar':
        pol_cm1.append(l1[index])
        pol_cm15.append(l2[index])
        pol_cm2.append(l3[index])
        pol_cm3.append(l4[index])
        pol_cm5.append(l5[index])
        pol_cmref.append(l6[index])
        pol_fd.append(l7[index])
        pol_fdref.append(l8[index])
    elif entry[0]=='hydrophobic':
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    elif entry[0]=='aromatic':
        ar_cm1.append(l1[index])
        ar_cm15.append(l2[index])
        ar_cm2.append(l3[index])
        ar_cm3.append(l4[index])
        ar_cm5.append(l5[index])
        ar_cmref.append(l6[index])
        ar_fd.append(l7[index])
        ar_fdref.append(l8[index])
    elif entry[0]=='charged':
        q_cm1.append(l1[index])
        q_cm15.append(l2[index])
        q_cm2.append(l3[index])
        q_cm3.append(l4[index])
        q_cm5.append(l5[index])
        q_cmref.append(l6[index])
        q_fd.append(l7[index])
        q_fdref.append(l8[index])
    elif entry[0]=='glycine':
        gly_cm1.append(l1[index])
        gly_cm15.append(l2[index])
        gly_cm2.append(l3[index])
        gly_cm3.append(l4[index])
        gly_cm5.append(l5[index])
        gly_cmref.append(l6[index])
        gly_fd.append(l7[index])
        gly_fdref.append(l8[index])
    elif entry[0]=='proline':   #there is only 1 position for 1 strc which prefers pro, so ill just include with np
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    else:
        print('uh oh...')


#1F4P
s1f4p=[0.58762575843223, 1.8475241875066346, 1.357509265180517, 0.19668802023155607, 1.8112403314111913, 1.2268777120160135, 1.0101954984312673, 0.3831096218459243, 1.9989097563495097, 0.6744314636183196, 2.030623019051236, 1.8207724410926989, 1.2214843911144377, 0.06933872009753957, 0.8586503856929171, 0.8095161194122211, 2.6276593533669113, 0.61687407344621, 1.0913389755354106]
chem1f4p=[('polar', 421.6666666666667), ('polar', 1.8021108179419525), ('polar', 9.073394495412844), ('glycine', 43.92857142857143), ('polar', 9.20183486238532), ('hydrophobic', 1.4534653465346534), ('polar', 3.7787234042553193), ('polar', 58.61904761904762), ('aromatic', 1.9394812680115274), ('glycine', 17.476190476190474), ('charged', 2.0632183908045976), ('polar', 2.9178082191780823), ('hydrophobic', 9.130434782608695), ('glycine', 179.71428571428572), ('charged', 2.782089552238806), ('aromatic', 17.793650793650794), ('charged', 1.8056426332288402), ('aromatic', 252.0), ('hydrophobic', 2.4164383561643836)]

l1=[0.6549555919070708, 0.7322275419023341, 0.6281594398152193, 0.994110934478776, 0.7879280977408699, 0.768840776588932, 0.9238718178772798, 0.8826394374869383, 0.6003748669190416, 0.9653706074060049, 0.805609454451977, 0.6627928053470642, 0.5132695980883555, 0.9978594469169115, 0.8722169353778657, 0.5707984499539945, 0.8659560726040997, 0.8837559604118207, 0.7201565464573438]
l2=[0.7712788435679849, 0.7062307673655153, 0.5812566584820149, 0.994110934478776, 0.8237553602997987, 0.7175198794540579, 0.9522514779296161, 0.9348508017520146, 0.6220780334914093, 0.9653706074060049, 0.7872443979130789, 0.6806389371893669, 0.5266605538434512, 0.9978594469169115, 0.8661206408686306, 0.5982202250265731, 0.8470085946352103, 0.8682398296417532, 0.7286463631636984]
l3=[0.8398362998474491, 0.7120190164377331, 0.6135748605539415, 0.994110934478776, 0.7953177895389142, 0.691115464366061, 0.9462047708472129, 0.9463929113010603, 0.6200039320886715, 0.9653706074060049, 0.82176614047221, 0.6724173592180243, 0.5399943331158829, 0.9978594469169115, 0.8639188391767507, 0.5676385551252052, 0.8834934287220901, 0.8757428708288222, 0.7476839628113756]
l4=[0.8891577625523392, 0.7333718952436832, 0.578662858273669, 0.994110934478776, 0.7927706769962266, 0.6920219776167649, 0.9350387237392038, 0.9805200151879717, 0.6194139891054364, 0.9653706074060049, 0.817127091282155, 0.63538210630368, 0.5590903231052005, 0.9978594469169115, 0.8023697058803211, 0.5676403702236442, 0.8704423399505326, 0.8498726787424273, 0.7399737409741802]
l5=[0.9124829802177967, 0.622062619692941, 0.47707520609472764, 0.9933933478602479, 0.7892878841733466, 0.6884032182732263, 0.918015339238296, 0.9828888599670376, 0.598391392538417, 0.9653706074060049, 0.8407244043692711, 0.5822529019658516, 0.5392403314153794, 0.9978594469169115, 0.7368145791490861, 0.5713647400297831, 0.8235097707463069, 0.8005625634402186, 0.7696491021396118]
l6=[0.4083871285525238, 0.78230661731789, 0.6250057822318889, 0.9953003974540015, 0.5636716159502237, 0.8924681077871539, 0.5865208681612626, 0.814297961983111, 0.679953225109929, 0.965565386836005, 0.8690237312108998, 0.7137502194447389, 0.5459280854415358, 0.997369950652099, 0.734579172695216, 0.6291956672695507, 0.8754467668306325, 0.7705221601319335, 0.7168819720599493]
l7=[0.35149934082162404, 0.49493816723733286, 0.4384474451037581, 0.994110934478776, 0.6336033689733611, 0.5685652787098262, 0.9147690605451285, 0.9767815386827643, 0.558572938476404, 0.9653706074060049, 0.8511835053148703, 0.4407457692498904, 0.43093359923614016, 0.9978594469169115, 0.9433046764093367, 0.47700631116652026, 0.44534971917874877, 0.9109287112356904, 0.9132608432368885]
l8=[0.34937824916609805, 0.5064455996837115, 0.4560285119697802, 0.994110934478776, 0.7469926419484203, 0.38263356830268513, 0.5761389291592882, 0.9771784570787727, 0.6789135765238015, 0.9653706074060049, 0.8498563207762806, 0.45642249642418775, 0.43093359923614016, 0.995907931616692, 0.921734982418064, 0.4790383633757256, 0.5068573401551175, 0.9109287112356904, 0.8917841003966644]

#
for index,s in enumerate(s1f4p):
    if s<=1.0:
        low_cm1.append(l1[index])
        low_cm15.append(l2[index])
        low_cm2.append(l3[index])
        low_cm3.append(l4[index])
        low_cm5.append(l5[index])
        low_cmref.append(l6[index])
        low_fd.append(l7[index])
        low_fdref.append(l8[index])
for index,s in enumerate(s1f4p):
    if 1.0<s<=2.0:
        med_cm1.append(l1[index])
        med_cm15.append(l2[index])
        med_cm2.append(l3[index])
        med_cm3.append(l4[index])
        med_cm5.append(l5[index])
        med_cmref.append(l6[index])
        med_fd.append(l7[index])
        med_fdref.append(l8[index])
for index,s in enumerate(s1f4p):
    if s>2.0:
        hi_cm1.append(l1[index])
        hi_cm15.append(l2[index])
        hi_cm2.append(l3[index])
        hi_cm3.append(l4[index])
        hi_cm5.append(l5[index])
        hi_cmref.append(l6[index])
        hi_fd.append(l7[index])
        hi_fdref.append(l8[index])

#
for index,entry in enumerate(chem1f4p):
    if entry[0]=='polar':
        pol_cm1.append(l1[index])
        pol_cm15.append(l2[index])
        pol_cm2.append(l3[index])
        pol_cm3.append(l4[index])
        pol_cm5.append(l5[index])
        pol_cmref.append(l6[index])
        pol_fd.append(l7[index])
        pol_fdref.append(l8[index])
    elif entry[0]=='hydrophobic':
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    elif entry[0]=='aromatic':
        ar_cm1.append(l1[index])
        ar_cm15.append(l2[index])
        ar_cm2.append(l3[index])
        ar_cm3.append(l4[index])
        ar_cm5.append(l5[index])
        ar_cmref.append(l6[index])
        ar_fd.append(l7[index])
        ar_fdref.append(l8[index])
    elif entry[0]=='charged':
        q_cm1.append(l1[index])
        q_cm15.append(l2[index])
        q_cm2.append(l3[index])
        q_cm3.append(l4[index])
        q_cm5.append(l5[index])
        q_cmref.append(l6[index])
        q_fd.append(l7[index])
        q_fdref.append(l8[index])
    elif entry[0]=='glycine':
        gly_cm1.append(l1[index])
        gly_cm15.append(l2[index])
        gly_cm2.append(l3[index])
        gly_cm3.append(l4[index])
        gly_cm5.append(l5[index])
        gly_cmref.append(l6[index])
        gly_fd.append(l7[index])
        gly_fdref.append(l8[index])
    elif entry[0]=='proline':   #there is only 1 position for 1 strc which prefers pro, so ill just include with np
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    else:
        print('uh oh...')

#3s6f
s3s6f=[1.6463619822543236, 2.1359805947118473, 1.1626757134623693, 1.2301034552319616, 1.5873041630904845, 2.1364443855007975, 0.6714966902300147, 0.6932860986398813, 2.30528191824096, 2.7232965457970297, 2.0480958154764637, 1.2753496653764298, 0.45292367052588456, 1.9400891589123943]
chem3s6f=[('hydrophobic', 6.220689655172414), ('hydrophobic', 3.4524940617577196), ('hydrophobic', 4.761969904240766), ('charged', 1.5689764780673872), ('glycine', 2.3294460641399417), ('charged', 1.5208333333333333), ('glycine', 11.018018018018019), ('glycine', 4.413702239789196), ('charged', 1.1537978656622725), ('charged', 1.7497546614327772), ('hydrophobic', 4.0553892215568865), ('aromatic', 3.1957403651115617), ('aromatic', 94.25), ('charged', 3.4062140391254316)]

l1=[0.7363208359033113, 0.44994135922836975, 0.862792514659936, 0.8262046739311166, 0.9132908135792942, 0.5753829303725257, 0.9722689288318668, 0.9358836744356628, 0.8221990521386456, 0.8237005337692469, 0.613330925336094, 0.8951469800125108, 0.9559821409363818, 0.8076885686423029]
l2=[0.7273726571672173, 0.40954203804288003, 0.863460034414845, 0.8371568415273438, 0.9109079192287989, 0.5690818892714472, 0.9722689288318668, 0.9358836744356628, 0.8314744408069419, 0.8321588078220247, 0.6091475809813722, 0.8981725889032912, 0.9501927021515476, 0.8231265027959632]
l3=[0.7366703933652248, 0.41259788932061237, 0.8904216857871126, 0.8555572516593142, 0.9024263629338646, 0.6049569452637921, 0.9722689288318668, 0.9358836744356628, 0.8537017934840663, 0.8767822860559387, 0.6689242059373487, 0.8999242209371476, 0.9231061830887348, 0.8036539700508492]
l4=[0.7540306370811329, 0.4162065889716583, 0.8475250860456697, 0.8852965761674942, 0.7357324721296651, 0.6568706491002734, 0.9722689288318668, 0.9358836744356628, 0.7792026318362504, 0.7751866633148642, 0.7163289426176083, 0.9260452326354205, 0.8809148958609225, 0.827549379837944]
l5=[0.7982928615056648, 0.4056052090712199, 0.46765112605496306, 0.9181435764294948, 0.6216583724329419, 0.7659550196867391, 0.9737328161831529, 0.9397747478347603, 0.7148532589948838, 0.6312381562110456, 0.6735561081749163, 0.916830113517108, 0.8313502120176965, 0.7621062303365275]
l6=[0.7987119770989284, 0.54936429115645, 0.884120703136515, 0.596940201275123, 0.8867046865579594, 0.7495462618336546, 0.976592080675878, 0.9807506548646155, 0.6830561472978149, 0.9096529437604646, 0.7233716871135416, 0.9217368757171385, 0.7489419712556702, 0.7846813676006851]
l7=[0.7313096659560778, 0.5089603084679116, 0.854860990617055, 0.7966840839318334, 0.6579643838521345, 0.48607140580667485, 0.9722689288318668, 0.9467971219710587, 0.5050688389740253, 0.7375442321011207, 0.5332883036865201, 0.8989471024668699, 0.6328367000093869, 0.7775546345652864]
l8=[0.7273726571672173, 0.40153184265997965, 0.854860990617055, 0.8219870228540165, 0.8605953402619708, 0.47426725163031414, 0.9722689288318668, 0.5714686333590606, 0.47299014081605284, 0.7813124224255483, 0.6479352041287625, 0.8951469800125108, 0.7849263363861021, 0.5684771295751929]

#
for index,s in enumerate(s3s6f):
    if s<=1.0:
        low_cm1.append(l1[index])
        low_cm15.append(l2[index])
        low_cm2.append(l3[index])
        low_cm3.append(l4[index])
        low_cm5.append(l5[index])
        low_cmref.append(l6[index])
        low_fd.append(l7[index])
        low_fdref.append(l8[index])
for index,s in enumerate(s3s6f):
    if 1.0<s<=2.0:
        med_cm1.append(l1[index])
        med_cm15.append(l2[index])
        med_cm2.append(l3[index])
        med_cm3.append(l4[index])
        med_cm5.append(l5[index])
        med_cmref.append(l6[index])
        med_fd.append(l7[index])
        med_fdref.append(l8[index])
for index,s in enumerate(s3s6f):
    if s>2.0:
        hi_cm1.append(l1[index])
        hi_cm15.append(l2[index])
        hi_cm2.append(l3[index])
        hi_cm3.append(l4[index])
        hi_cm5.append(l5[index])
        hi_cmref.append(l6[index])
        hi_fd.append(l7[index])
        hi_fdref.append(l8[index])

#
for index,entry in enumerate(chem3s6f):
    if entry[0]=='polar':
        pol_cm1.append(l1[index])
        pol_cm15.append(l2[index])
        pol_cm2.append(l3[index])
        pol_cm3.append(l4[index])
        pol_cm5.append(l5[index])
        pol_cmref.append(l6[index])
        pol_fd.append(l7[index])
        pol_fdref.append(l8[index])
    elif entry[0]=='hydrophobic':
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    elif entry[0]=='aromatic':
        ar_cm1.append(l1[index])
        ar_cm15.append(l2[index])
        ar_cm2.append(l3[index])
        ar_cm3.append(l4[index])
        ar_cm5.append(l5[index])
        ar_cmref.append(l6[index])
        ar_fd.append(l7[index])
        ar_fdref.append(l8[index])
    elif entry[0]=='charged':
        q_cm1.append(l1[index])
        q_cm15.append(l2[index])
        q_cm2.append(l3[index])
        q_cm3.append(l4[index])
        q_cm5.append(l5[index])
        q_cmref.append(l6[index])
        q_fd.append(l7[index])
        q_fdref.append(l8[index])
    elif entry[0]=='glycine':
        gly_cm1.append(l1[index])
        gly_cm15.append(l2[index])
        gly_cm2.append(l3[index])
        gly_cm3.append(l4[index])
        gly_cm5.append(l5[index])
        gly_cmref.append(l6[index])
        gly_fd.append(l7[index])
        gly_fdref.append(l8[index])
    elif entry[0]=='proline':   #there is only 1 position for 1 strc which prefers pro, so ill just include with np
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    else:
        print('uh oh...')




#2xbn
#s
s2xbn=[1.1074077008064083, 2.3507667617650343, 0.3396105337811549, 2.0277733827368776, 2.031863989180083, 1.4330513992153222, 2.4625299774157035, 2.1554886126747506, 0.04399005933711353, 1.6391389593551877, 0.8632214565477709, 1.1917058590354084, 0.9064597240045547, 0.13566653627242223]
#
chem2xbn=[('glycine', 1.3023519410597904), ('polar', 1.9467951403435275), ('glycine', 25.642633228840126), ('polar', 1.0057288351368554), ('hydrophobic', 2.713343480466768), ('aromatic', 4.301980198019802), ('polar', 1.4617583988563259), ('polar', 1.027981345769487), ('charged', 580.8666666666667), ('hydrophobic', 15.43574297188755), ('aromatic', 3.5810234541577826), ('polar', 4.202594193946881), ('polar', 5.9749784296807595), ('charged', 126.5)]
#pps
l1=[0.5583036053268707, 0.795179353978081, 0.9821169431352174, 0.7432220613138911, 0.878738034938816, 0.8688278439251249, 0.7135646131537121, 0.5671970930362183, 0.3563504977975033, 0.8549847789621786, 0.5667067024073424, 0.6796705654838968, 0.7668975956554109, 0.40229438354859215]
l2=[0.5674774106747662, 0.7890282785258529, 0.9821169431352174, 0.697487400413548, 0.8705736816895864, 0.8580872612968553, 0.7099208590569699, 0.5703726728893472, 0.3497624898555114, 0.8444128843221352, 0.5634328055375777, 0.7947219233027993, 0.7977399659131922, 0.4095604648202178]
l3=[0.5682096886440389, 0.8070688847859461, 0.983482891305086, 0.6631258678557137, 0.8635003665966752, 0.7891394201437312, 0.742121208117305, 0.5499883187264342, 0.34975935360279464, 0.8478399447253022, 0.5573509188363968, 0.8646492510258078, 0.8090668486916988, 0.3962867387359099]
l4=[0.5561965708933555, 0.7721451070840014, 0.9821169431352174, 0.6391846869126023, 0.8398087801370924, 0.6648380357804835, 0.7837483846438736, 0.5730149617303022, 0.3425678933318069, 0.8672176662289737, 0.5453849483628872, 0.8857362874542185, 0.8414330250661519, 0.39895388602848547]
l5=[0.5083771430635127, 0.6755720601451758, 0.9821169431352174, 0.6210108198988202, 0.7275938090465034, 0.5046345353294936, 0.7944175695326787, 0.533764516335512, 0.3425678933318069, 0.7896701565847845, 0.5434932580595225, 0.9005182238846657, 0.8270042387302571, 0.40475836008779686]
l6=[0.6064297432145066, 0.839946993224182, 0.9743256673771178, 0.8228888205363284, 0.9103391680099439, 0.7698195295841608, 0.786790799075636, 0.6550313801115804, 0.3980364798270579, 0.9052327910042799, 0.5651025544926338, 0.6739034908092122, 0.6248481802481913, 0.38700339107212123]
l7=[0.4049506406274499, 0.6562537603883978, 0.765020202793179, 0.4667119522256966, 0.6572338674762397, 0.5070729834228085, 0.5612411922211433, 0.5475346380556969, 0.3962974164139874, 0.8613095856958067, 0.6496972264066934, 0.6901799385184129, 0.8478360925426064, 0.37043942257421036]
l8=[0.44093873785297044, 0.6401921942476996, 0.47725821903370835, 0.4651372537072662, 0.679682386898103, 0.547251859219181, 0.5679983845672918, 0.4771466461291777, 0.33661884248686214, 0.6095152510608758, 0.5284788377725496, 0.7049200600849261, 0.42336025109422604, 0.36350163011483305]

for index,s in enumerate(s2xbn):
    if s<=1.0:
        low_cm1.append(l1[index])
        low_cm15.append(l2[index])
        low_cm2.append(l3[index])
        low_cm3.append(l4[index])
        low_cm5.append(l5[index])
        low_cmref.append(l6[index])
        low_fd.append(l7[index])
        low_fdref.append(l8[index])
for index,s in enumerate(s2xbn):
    if 1.0<s<=2.0:
        med_cm1.append(l1[index])
        med_cm15.append(l2[index])
        med_cm2.append(l3[index])
        med_cm3.append(l4[index])
        med_cm5.append(l5[index])
        med_cmref.append(l6[index])
        med_fd.append(l7[index])
        med_fdref.append(l8[index])
for index,s in enumerate(s2xbn):
    if s>2.0:
        hi_cm1.append(l1[index])
        hi_cm15.append(l2[index])
        hi_cm2.append(l3[index])
        hi_cm3.append(l4[index])
        hi_cm5.append(l5[index])
        hi_cmref.append(l6[index])
        hi_fd.append(l7[index])
        hi_fdref.append(l8[index])

#
for index,entry in enumerate(chem2xbn):
    if entry[0]=='polar':
        pol_cm1.append(l1[index])
        pol_cm15.append(l2[index])
        pol_cm2.append(l3[index])
        pol_cm3.append(l4[index])
        pol_cm5.append(l5[index])
        pol_cmref.append(l6[index])
        pol_fd.append(l7[index])
        pol_fdref.append(l8[index])
    elif entry[0]=='hydrophobic':
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    elif entry[0]=='aromatic':
        ar_cm1.append(l1[index])
        ar_cm15.append(l2[index])
        ar_cm2.append(l3[index])
        ar_cm3.append(l4[index])
        ar_cm5.append(l5[index])
        ar_cmref.append(l6[index])
        ar_fd.append(l7[index])
        ar_fdref.append(l8[index])
    elif entry[0]=='charged':
        q_cm1.append(l1[index])
        q_cm15.append(l2[index])
        q_cm2.append(l3[index])
        q_cm3.append(l4[index])
        q_cm5.append(l5[index])
        q_cmref.append(l6[index])
        q_fd.append(l7[index])
        q_fdref.append(l8[index])
    elif entry[0]=='glycine':
        gly_cm1.append(l1[index])
        gly_cm15.append(l2[index])
        gly_cm2.append(l3[index])
        gly_cm3.append(l4[index])
        gly_cm5.append(l5[index])
        gly_cmref.append(l6[index])
        gly_fd.append(l7[index])
        gly_fdref.append(l8[index])
    elif entry[0]=='proline':   #there is only 1 position for 1 strc which prefers pro, so ill just include with np
        np_cm1.append(l1[index])
        np_cm15.append(l2[index])
        np_cm2.append(l3[index])
        np_cm3.append(l4[index])
        np_cm5.append(l5[index])
        np_cmref.append(l6[index])
        np_fd.append(l7[index])
        np_fdref.append(l8[index])
    else:
        print('uh oh...')


'''
hi s, med s, low s
pol, np, q, g, p
for each of these groups
pps dists across all strc for each method


sed 's/3dk9/2xbn/' text.txt
sed 's/3dk9/1f4p/' text.txt
sed 's/3dk9/3s6f/' text.txt
sed 's/3dk9/1zk4/' text.txt




HOW MANY LOW,MED,HI ENTROPY POSITIONS ARE THERE?
In [15]: len(hi_cm1)
Out[15]: 18

In [16]: len(med_cm1)
Out[16]: 41

In [17]: len(low_cm1)
Out[17]: 39

HOW MANY FOR EACH CHEM
In [28]: len(pol_cm1)
Out[28]: 22

In [26]: len(np_cm1)
Out[26]: 28

In [23]: len(q_cm1)
Out[23]: 20

In [24]: len(ar_cm1)
Out[24]: 8

In [29]: len(gly_cm1)
Out[29]: 20

'''

#plot pps dists across methods for low entropy positions
import matplotlib.pyplot as plt
term_scores=[low_cm1,
             low_cm15,
             low_cm2,
             low_cm3,
             low_cm5,
             low_cmref,
             low_fd,
             low_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Low Entropy Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('low_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for med entropy positions
term_scores=[med_cm1,
             med_cm15,
             med_cm2,
             med_cm3,
             med_cm5,
             med_cmref,
             med_fd,
             med_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Medium Entropy Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('med_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for high entropy positions
term_scores=[hi_cm1,
             hi_cm15,
             hi_cm2,
             hi_cm3,
             hi_cm5,
             hi_cmref,
             hi_fd,
             hi_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for High Entropy Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('hi_entropy_pps_comparison.pdf')
plt.clf()


#plot pps dists across methods for polar positions
term_scores=[pol_cm1,
             pol_cm15,
             pol_cm2,
             pol_cm3,
             pol_cm5,
             pol_cmref,
             pol_fd,
             pol_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Polar Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('pol_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for nonpolar positions
term_scores=[np_cm1,
             np_cm15,
             np_cm2,
             np_cm3,
             np_cm5,
             np_cmref,
             np_fd,
             np_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Nonpolar Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('nonpol_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for aromatic positions
term_scores=[ar_cm1,
             ar_cm15,
             ar_cm2,
             ar_cm3,
             ar_cm5,
             ar_cmref,
             ar_fd,
             ar_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Aromatic Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('ar_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for charged positions
term_scores=[q_cm1,
             q_cm15,
             q_cm2,
             q_cm3,
             q_cm5,
             q_cmref,
             q_fd,
             q_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Charged Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('q_entropy_pps_comparison.pdf')
plt.clf()

#plot pps dists across methods for glycine positions
term_scores=[q_cm1,
             q_cm15,
             q_cm2,
             q_cm3,
             q_cm5,
             q_cmref,
             q_fd,
             q_fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for Glycine Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cm1','cm1.5','cm2','cm3','cm5','cmref15','fdgenpot','fdref15']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('gly_entropy_pps_comparison.pdf')
plt.clf()



'''
lets look at these chemistries and preferences a bit closer
1f4p
2xbn
3dk9
3s6f
1zk4
'''
l1=[('polar', 421.6666666666667), ('polar', 1.8021108179419525), ('polar', 9.073394495412844), ('glycine', 43.92857142857143), ('polar', 9.20183486238532), ('hydrophobic', 1.4534653465346534), ('polar', 3.7787234042553193), ('polar', 58.61904761904762), ('aromatic', 1.9394812680115274), ('glycine', 17.476190476190474), ('charged', 2.0632183908045976), ('polar', 2.9178082191780823), ('hydrophobic', 9.130434782608695), ('glycine', 179.71428571428572), ('charged', 2.782089552238806), ('aromatic', 17.793650793650794), ('charged', 1.8056426332288402), ('aromatic', 252.0), ('hydrophobic', 2.4164383561643836)]
l2=[('glycine', 1.3023519410597904), ('polar', 1.9467951403435275), ('glycine', 25.642633228840126), ('polar', 1.0057288351368554), ('hydrophobic', 2.713343480466768), ('aromatic', 4.301980198019802), ('polar', 1.4617583988563259), ('polar', 1.027981345769487), ('charged', 580.8666666666667), ('hydrophobic', 15.43574297188755), ('aromatic', 3.5810234541577826), ('polar', 4.202594193946881), ('polar', 5.9749784296807595), ('charged', 126.5)]
l3=[('hydrophobic', 543.0), ('glycine', 3265.0), ('glycine', 1.1703499079189688), ('glycine', 190.88235294117646), ('proline', 1.250620347394541), ('glycine', 1.8692515779981966), ('hydrophobic', 31.54), ('charged', 38.24691358024691), ('charged', 3.7945492662473796), ('charged', 2.5719178082191783), ('glycine', 30.03960396039604), ('polar', 2.9861687413554634), ('glycine', 14.277227722772277), ('polar', 3.225634178905207), ('charged', 2.0737704918032787), ('hydrophobic', 1.481203007518797), ('hydrophobic', 8.330434782608696), ('polar', 4.3552188552188555), ('glycine', 1087.0), ('polar', 10.243542435424354), ('hydrophobic', 2.0814070351758795), ('hydrophobic', 1.2635350318471337), ('hydrophobic', 17.113636363636363), ('charged', 64.77551020408163), ('hydrophobic', 1.1665510062456628), ('charged', 10.163498098859316), ('polar', 3.508256880733945), ('hydrophobic', 16.19148936170213), ('glycine', 3265.0), ('charged', 65.14285714285714)]
l4=[('hydrophobic', 6.220689655172414), ('hydrophobic', 3.4524940617577196), ('hydrophobic', 4.761969904240766), ('charged', 1.5689764780673872), ('glycine', 2.3294460641399417), ('charged', 1.5208333333333333), ('glycine', 11.018018018018019), ('glycine', 4.413702239789196), ('charged', 1.1537978656622725), ('charged', 1.7497546614327772), ('hydrophobic', 4.0553892215568865), ('aromatic', 3.1957403651115617), ('aromatic', 94.25), ('charged', 3.4062140391254316)]
l5=[('glycine', 91.78867924528302), ('hydrophobic', 1.901567720380365), ('polar', 2.691761628993088), ('polar', 1.3660100244783775), ('glycine', 37.259319286871964), ('hydrophobic', 20.95923913043478), ('glycine', 80.13201320132013), ('hydrophobic', 2.137474351800037), ('hydrophobic', 2.021820917983446), ('charged', 4.028797145769623), ('charged', 12.488167308750688), ('hydrophobic', 33.37626628075253), ('polar', 5.9737978692772815), ('hydrophobic', 32.43854748603352), ('glycine', 10.125880695162047), ('hydrophobic', 7.0164328657314625), ('hydrophobic', 2.9296259842519685), ('hydrophobic', 4.231813125695217), ('polar', 31.634746922024625), ('aromatic', 106.50442477876106), ('charged', 47.13921568627451)]

import matplotlib.pyplot as plt
import numpy as np
polar=0
npol=0
q=0
ar=0
gly=0
ps=[]
nps=[]
qs=[]
ars=[]
glys=[]
for a,b in l1:
    if a=='polar':
        polar+=1
        ps.append(b)
    elif a=='hydrophobic':
        npol+=1
        nps.append(b)
    elif a=='charged':
        q+=1
        qs.append(b)
    elif a=='aromatic':
        ar+=1
        ars.append(b)
    elif a=='glycine':
        gly+=1
        glys.append(b)
for a,b in l2:
    if a=='polar':
        polar+=1
        ps.append(b)
    elif a=='hydrophobic':
        npol+=1
        nps.append(b)
    elif a=='charged':
        q+=1
        qs.append(b)
    elif a=='aromatic':
        ar+=1
        ars.append(b)
    elif a=='glycine':
        gly+=1
        glys.append(b)
for a,b in l3:
    if a=='polar':
        polar+=1
        ps.append(b)
    elif a=='hydrophobic':
        npol+=1
        nps.append(b)
    elif a=='charged':
        q+=1
        qs.append(b)
    elif a=='aromatic':
        ar+=1
        ars.append(b)
    elif a=='glycine':
        gly+=1
        glys.append(b)
for a,b in l4:
    if a=='polar':
        polar+=1
        ps.append(b)
    elif a=='hydrophobic':
        npol+=1
        nps.append(b)
    elif a=='charged':
        q+=1
        qs.append(b)
    elif a=='aromatic':
        ar+=1
        ars.append(b)
    elif a=='glycine':
        gly+=1
        glys.append(b)
for a,b in l5:
    if a=='polar':
        polar+=1
        ps.append(b)
    elif a=='hydrophobic':
        npol+=1
        nps.append(b)
    elif a=='charged':
        q+=1
        qs.append(b)
    elif a=='aromatic':
        ar+=1
        ars.append(b)
    elif a=='glycine':
        gly+=1
        glys.append(b)
#barplot of counts of each preferred chem
datas = [polar,npol,q,ar,gly]
columns = ['Polar', 'Nonpolar', 'Charged', 'Aromatic', 'Glycine']
pos = np.arange(len(columns))
plt.bar(pos,datas,tick_label=columns)
plt.title('Number of Positions of Each Preferred Residue Type')
plt.ylabel('Count')
plt.savefig('allchems.pdf')
plt.clf()
#boxplot strengths of each preferred chem
term_scores=[ps,nps,qs,ars,glys]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
ax.set_title('Distribution of Preference Magnitudes')
ax.set_ylabel('Relative Preference (n_preferred/n_second_preference)')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['Polar', 'Nonpolar', 'Charged', 'Aromatic', 'Glycine']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
plt.savefig('pref_chem_strengths_bp.pdf')
plt.clf()
#boxplot strengths of each preferred chem without glycine or outliers
term_scores=[ps,nps,qs,ars]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores,showfliers=False)
ax.set_title('Distribution of Preference Magnitudes')
ax.set_ylabel('Relative Preference (n_preferred/n_second_preference)')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['Polar', 'Nonpolar', 'Charged', 'Aromatic']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = [x for x in term_scores[i] if x<100]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('pref_chem_strengths_bp_nogly.pdf')
plt.clf()
#vboxplot just glycine
term_scores=[glys]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores,showfliers=False)
ax.set_title('Distribution of Preference Magnitudes')
ax.set_ylabel('Relative Preference (n_preferred/n_second_preference)')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['Glycine']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = [x for x in term_scores[i] if x<200]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('pref_chem_strengths_bp_gly.pdf')
plt.clf()



'''
wanna actually plot pps across all positions across methods
'''
cm1=[]
cm15=[]
cm2=[]
cm3=[]
cm5=[]
cmref=[]
fd=[]
fdref=[]

for i in low_cm1:
    cm1.append(i)
for i in med_cm1:
    cm1.append(i)
for i in hi_cm1:
    cm1.append(i)

for i in low_cm15:
    cm15.append(i)
for i in med_cm15:
    cm15.append(i)
for i in hi_cm15:
    cm15.append(i)

for i in low_cm2:
    cm2.append(i)
for i in med_cm2:
    cm2.append(i)
for i in hi_cm2:
    cm2.append(i)

for i in low_cm3:
    cm3.append(i)
for i in med_cm3:
    cm3.append(i)
for i in hi_cm3:
    cm3.append(i)

for i in low_cm5:
    cm5.append(i)
for i in med_cm5:
    cm5.append(i)
for i in hi_cm5:
    cm5.append(i)

for i in low_cmref:
    cmref.append(i)
for i in med_cmref:
    cmref.append(i)
for i in hi_cmref:
    cmref.append(i)

for i in low_fd:
    fd.append(i)
for i in med_fd:
    fd.append(i)
for i in hi_fd:
    fd.append(i)


for i in low_fdref:
    fdref.append(i)
for i in med_fdref:
    fdref.append(i)
for i in hi_fdref:
    fdref.append(i)

'''
sed 's/cm1/cm2/' text.txt
sed 's/cm1/cm3/' text.txt
sed 's/cm1/cm5/' text.txt
sed 's/cm1/cmref/' text.txt
sed 's/cm1/fd/' text.txt
sed 's/cm1/fdref/' text.txt
'''

#plot pps dists across methods for all positions
term_scores=[cm1,
             cm15,
             cm2,
             cm3,
             cm5,
             cmref,
             fd,
             fdref]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cmgp','cm1.5','cm2','cm3','cm5','cmref','fdgp','fdref']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('pps_all_positions_methods_comparison.pdf')
plt.clf()


#figure for quals proposal
term_scores=[fdref,
             fd,
             cmref,
             cm1,
             cm2]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('Comparison of Methods for Binding Site Design: Native Sequence Recovery Benchmark')
ax.set_ylabel('Positional Profile Similarity')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['Method 1','Method 2','Method 3','Method 4','Method 5']
plt.xticks(xlocs, xlabs,rotation='vertical')
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('pps_for_quals.pdf',bbox_inches='tight')
plt.clf()



#importing hbnet results to compare with previous
f4p0=[0.909132371234705, 0.6709733780221623, 0.5682523932053426, 0.9937639099226185, 0.8171563170861433, 0.7452420456375808, 0.9264333810812739, 0.9842540791143506, 0.6602882380799318, 0.9689763023278039, 0.7964227206292337, 0.5018989767615223, 0.5400936827877832, 0.9960945726043957, 0.8934127748865708, 0.6220470882997057, 0.8937347594616273, 0.7179242348539034, 0.7280116785637754]
f4p1=[0.5800105349050326, 0.708039362545424, 0.7151245748998283, 0.9925029830551025, 0.7589793642742163, 0.7897121525880153, 0.7772004311136137, 0.9862951697715321, 0.7576039437308715, 0.9689763023278039, 0.7991858708160955, 0.6339504648302918, 0.5599525912772814, 0.9960945726043957, 0.8600060761730784, 0.6786797572697956, 0.8319562166341329, 0.725937504847614, 0.6138235939274139]
f4p11=[0.5982930590797035, 0.7082468801585039, 0.6745313640179149, 0.9907740859688489, 0.8377090668332119, 0.7917723548830389, 0.8014960667753624, 0.9756423870549721, 0.7459161498142759, 0.9689763023278039, 0.8098001189701984, 0.7173652202714345, 0.5505733363451462, 0.9918517715678516, 0.8376481443812857, 0.6541791655934082, 0.8256970743962622, 0.6887134944300808, 0.6180855300639696]
xbn0=[0.6056987475030294, 0.7944630816508267, 0.9822706562842531, 0.5467852972143198, 0.6844538753553407, 0.7782644672987503, 0.8409901052641249, 0.551994285513479, 0.49445099138123794, 0.8634627051674364, 0.5434296784395469, 0.8815809149409839, 0.8097879309610259, 0.39340996473288437]
xbn1=[0.5534030166590711, 0.7406627114762574, 0.9822706562842531, 0.6766621318637158, 0.9531877699703794, 0.7000618451099658, 0.8300469651531539, 0.6020572860644307, 0.3622869280556307, 0.8397353769848154, 0.5511943272008457, 0.8880225395031003, 0.7919365931670266, 0.4527980348864178]
xbn11=[0.5540175728019081, 0.7166755011460637, 0.9822706562842531, 0.6741286747739867, 0.9449872712783944, 0.6821670231308699, 0.853685045248691, 0.5942108476473303, 0.37587084928980696, 0.8513652202940355, 0.5281537477394406, 0.8950607535145766, 0.7197157590502185, 0.4613290910945338]
dk90=[0.9431265904457086, 0.9871555707888805, 0.7889100790445083, 0.9891833802058929, 0.5571263789324099, 0.8647365352778614, 0.9040626182208965, 0.9480084378187249, 0.7344063990268259, 0.8892749742201085, 0.9886148228305627, 0.9163588820454789, 0.9788501607768572, 0.6412656076050319, 0.7622093060986155, 0.8540587287648319, 0.9900957718930394, 0.9624798580389254, 0.9879659471181127, 0.5761797652424421, 0.7108383133467242, 0.7834636818327688, 0.8637152061296547, 0.9815589626747419, 0.788304918752693, 0.933803405279679, 0.7919482077045278, 0.8958740879388513, 0.9871555707888805, 0.7716581515607857]
dk91=[0.9650436336187166, 0.9871555707888805, 0.7693813486942289, 0.9891833802058929, 0.5105995986036549, 0.8920514932035934, 0.919902066482293, 0.9595495812979796, 0.7722187267569024, 0.8511880705028245, 0.9886148228305627, 0.8771054672773415, 0.9788501607768572, 0.6272344813207038, 0.7247906471084531, 0.9115554972050613, 0.9756377227760403, 0.942170327267181, 0.9817673641586065, 0.4785682184529454, 0.7274900840832101, 0.6759494438323737, 0.7166638150727476, 0.9275750820377333, 0.845615738711136, 0.5614951640874526, 0.7538271404034054, 0.9212294343805656, 0.9871555707888805, 0.85653286501181]
dk911=[0.9564144932120314, 0.9871555707888805, 0.7592653756478019, 0.9891833802058929, 0.5367309991483944, 0.8802904592062714, 0.905078875000797, 0.9486348265156562, 0.7817679824752864, 0.7843173819412447, 0.987673342962503, 0.8658220864188962, 0.9788501607768572, 0.6270930620562318, 0.7270323228630504, 0.8697333618947971, 0.9740178091047014, 0.9534874315942483, 0.982668805335997, 0.48667650772456006, 0.7206598934426662, 0.6871730717273401, 0.7208852959828688, 0.9375283870841222, 0.8402916257238575, 0.6327943449506154, 0.7883007488129489, 0.9141270363611126, 0.9871555707888805, 0.8150674943200414]
s6f0=[0.7725408164099766, 0.42601159673119315, 0.8663031955457606, 0.8913252726116031, 0.9389239090816631, 0.729912713089758, 0.9727114038170337, 0.9411374082395306, 0.8820350341193278, 0.7158765756762795, 0.7673898418925962, 0.9082101199669469, 0.8201390363658482, 0.8113667202235609]
s6f1=[0.8575274151793943, 0.4552374348056525, 0.8630317599537254, 0.8972522392964454, 0.9444423675113826, 0.7483101736773534, 0.9738499317393938, 0.9411374082395306, 0.8673670684202361, 0.8041134311689739, 0.7686994173202057, 0.8991646901821703, 0.46559148636785697, 0.815899485548355]
s6f11=[0.8924949425657142, 0.46142516255816923, 0.8816476912222563, 0.9191310946581588, 0.918529719196865, 0.7346850666038682, 0.9754041527382663, 0.936455822582317, 0.8254341696460524, 0.7924571130561844, 0.7883999153462894, 0.8500131268110406, 0.464314742768155, 0.8475603175184541]
zk40=[0.9842985596629559, 0.7084247414251911, 0.8416817840134079, 0.7572134688830143, 0.988737826327712, 0.8290583590040165, 0.9847341611184685, 0.7920719301978023, 0.629503390138328, 0.8414222927140503, 0.9047170949911869, 0.5891844492792694, 0.8175341156552176, 0.9663070387380317, 0.9737675209849325, 0.8078393822477719, 0.9060759609937739, 0.8609921352855989, 0.5543166589133157, 0.48927811012051114, 0.5887040355218751]
zk41=[0.9842985596629559, 0.7153986034823708, 0.7823017505346979, 0.7258086990611128, 0.9893374835093612, 0.8079191832963599, 0.9847341611184685, 0.7060233851734814, 0.629503390138328, 0.8103006661374038, 0.9221398213805269, 0.6620054424364745, 0.6884655283873944, 0.7921635869109701, 0.9678458311604158, 0.9058593941970228, 0.9374978763148857, 0.9071762751553787, 0.8547818163564641, 0.7365533259488458, 0.6061764906666841]
zk411=[0.9835668921752422, 0.7153986034823708, 0.8054381499065993, 0.6749610277829696, 0.9893374835093612, 0.8157300675850121, 0.9847341611184685, 0.728336329364405, 0.629503390138328, 0.7976439552188661, 0.9221663701536885, 0.6614419397446765, 0.7866092273490284, 0.7853690389792184, 0.9678458311604158, 0.8889374916521987, 0.9440605608912007, 0.907147822384637, 0.9245902101968417, 0.736288960176098, 0.5987349818936785]


l=[]
for i in f4p0:
    l.append(i)
for i in zk40:
    l.append(i)
for i in dk90:
    l.append(i)
for i in xbn0:
    l.append(i)
for i in s6f0:
    l.append(i)

hbnet1=[i for i in l]
l=[]
for i in f4p1:
    l.append(i)
for i in zk41:
    l.append(i)
for i in dk91:
    l.append(i)
for i in xbn1:
    l.append(i)
for i in s6f1:
    l.append(i)
hbnet2=[i for i in l]
l=[]
for i in f4p11:
    l.append(i)
for i in zk411:
    l.append(i)
for i in dk911:
    l.append(i)
for i in xbn11:
    l.append(i)
for i in s6f11:
    l.append(i)
hbnet3=[i for i in l]

'''
cm1
[0.9881684652796879,
 0.9906037589119667,
 0.9884226359745666,
 0.8964640993686489,
 0.8208062336062725,
 0.9832495621097869,
 0.9672954718599777,
 0.6736155156304556,
 0.6272637872183828,
 0.6230357768261928,
 0.9529672032488535,
 0.9914307255889335,
 0.9928507946530606,
 0.8633897085607297,
 0.9423889947696285,
 0.9884486706510274,
 0.9770817381161581,
 0.9654182196172523,
 0.9920895785763428,
 0.9420873582536441,
 0.9345945278058593,
 0.9914307255889335,
 0.9404817298798811,
 0.6549555919070708,
 0.994110934478776,
 0.8826394374869383,
 0.9653706074060049,
 0.9978594469169115,
 0.8722169353778657,
 0.5707984499539945,
 0.8837559604118207,
 0.9722689288318668,
 0.9358836744356628,
 0.9559821409363818,
 0.9821169431352174,
 0.3563504977975033,
 0.5667067024073424,
 0.7668975956554109,
 0.40229438354859215,
 0.7042118668999933,
 0.7997289356140909,
 0.7296517535302509,
 0.8763414897161113,
 0.8635037954793773,
 0.5636210094115919,
 0.8659372998239806,
 0.8325966274848178,
 0.7610461127054062,
 0.6328830846859371,
 0.8458035963296642,
 0.9554380098542957,
 0.6107674673915869,
 0.8371720338340876,
 0.9751576264402949,
 0.7441795161004752,
 0.6679778452541343,
 0.7753175554836576,
 0.7222464523263868,
 0.9553118683665911,
 0.8282255780089934,
 0.9212871324650644,
 0.7322275419023341,
 0.6281594398152193,
 0.7879280977408699,
 0.768840776588932,
 0.9238718178772798,
 0.6003748669190416,
 0.6627928053470642,
 0.5132695980883555,
 0.7201565464573438,
 0.7363208359033113,
 0.862792514659936,
 0.8262046739311166,
 0.9132908135792942,
 0.8951469800125108,
 0.8076885686423029,
 0.5583036053268707,
 0.8688278439251249,
 0.8549847789621786,
 0.6796705654838968,
 0.7769461102151347,
 0.6150415365896966,
 0.9322106396081191,
 0.7274582737581057,
 0.877232066180728,
 0.7671434122205429,
 0.805609454451977,
 0.8659560726040997,
 0.44994135922836975,
 0.5753829303725257,
 0.8221990521386456,
 0.8237005337692469,
 0.613330925336094,
 0.795179353978081,
 0.7432220613138911,
 0.878738034938816,
 0.7135646131537121,
 0.5671970930362183]

cm2
[0.9881684652796879,
 0.9892113241178099,
 0.9884226359745666,
 0.9097622960879046,
 0.848816979262534,
 0.9829226783091688,
 0.9672954718599777,
 0.7203032269892242,
 0.6115929703612997,
 0.6291954279916723,
 0.9529139788538602,
 0.9914307255889335,
 0.9928507946530606,
 0.864968106687819,
 0.9478607625287241,
 0.9884486706510274,
 0.9770817381161581,
 0.9641055984346705,
 0.9920895785763428,
 0.9418013439165974,
 0.9820273853498757,
 0.9914307255889335,
 0.9511791144824909,
 0.8398362998474491,
 0.994110934478776,
 0.9463929113010603,
 0.9653706074060049,
 0.9978594469169115,
 0.8639188391767507,
 0.5676385551252052,
 0.8757428708288222,
 0.9722689288318668,
 0.9358836744356628,
 0.9231061830887348,
 0.983482891305086,
 0.34975935360279464,
 0.5573509188363968,
 0.8090668486916988,
 0.3962867387359099,
 0.7042118668999933,
 0.7990306197942876,
 0.6875570623001788,
 0.8799614966908846,
 0.8447733568094021,
 0.5530378763453918,
 0.8660461998811919,
 0.8311830860990681,
 0.7570694142233224,
 0.6026759894582574,
 0.8499046670009603,
 0.9291058959550993,
 0.6190487634813682,
 0.8322543826895015,
 0.9770962969732435,
 0.6794331770427527,
 0.6817796116633339,
 0.7799214614917434,
 0.732649029343463,
 0.9526903744669615,
 0.8286459533849767,
 0.9122531477518718,
 0.7120190164377331,
 0.6135748605539415,
 0.7953177895389142,
 0.691115464366061,
 0.9462047708472129,
 0.6200039320886715,
 0.6724173592180243,
 0.5399943331158829,
 0.7476839628113756,
 0.7366703933652248,
 0.8904216857871126,
 0.8555572516593142,
 0.9024263629338646,
 0.8999242209371476,
 0.8036539700508492,
 0.5682096886440389,
 0.7891394201437312,
 0.8478399447253022,
 0.8646492510258078,
 0.7832022890287194,
 0.6150415365896966,
 0.9237625446988443,
 0.7217011655776553,
 0.8567007920989596,
 0.7620929427139445,
 0.82176614047221,
 0.8834934287220901,
 0.41259788932061237,
 0.6049569452637921,
 0.8537017934840663,
 0.8767822860559387,
 0.6689242059373487,
 0.8070688847859461,
 0.6631258678557137,
 0.8635003665966752,
 0.742121208117305,
 0.5499883187264342]

cm_3
[0.9881684652796879,
 0.9914929956039553,
 0.9884226359745666,
 0.8789937407930237,
 0.8271135977733781,
 0.9839966125535117,
 0.9672954718599777,
 0.8309463148593601,
 0.6495034553985933,
 0.6092547910167567,
 0.9609706799590296,
 0.9914307255889335,
 0.9928507946530606,
 0.8633897085607297,
 0.9442004482728737,
 0.9884486706510274,
 0.9770817381161581,
 0.9701539578483391,
 0.9920895785763428,
 0.9223847958100326,
 0.9891570873954265,
 0.9914307255889335,
 0.91112521882727,
 0.8891577625523392,
 0.994110934478776,
 0.9805200151879717,
 0.9653706074060049,
 0.9978594469169115,
 0.8023697058803211,
 0.5676403702236442,
 0.8498726787424273,
 0.9722689288318668,
 0.9358836744356628,
 0.8809148958609225,
 0.9821169431352174,
 0.3425678933318069,
 0.5453849483628872,
 0.8414330250661519,
 0.39895388602848547,
 0.7042118668999933,
 0.7680022876343955,
 0.7128607121361119,
 0.866369563353527,
 0.8217484234396536,
 0.5725017098366166,
 0.8746938785479916,
 0.8476794837237759,
 0.7610461127054062,
 0.5710778399316083,
 0.8686870817712047,
 0.8791655898447029,
 0.621821648301226,
 0.836660578062394,
 0.9617911175901964,
 0.6400375009709638,
 0.681341786152657,
 0.7808671153745954,
 0.7267764799492057,
 0.9516210994583532,
 0.8305429632487021,
 0.8178501056931399,
 0.7333718952436832,
 0.578662858273669,
 0.7927706769962266,
 0.6920219776167649,
 0.9350387237392038,
 0.6194139891054364,
 0.63538210630368,
 0.5590903231052005,
 0.7399737409741802,
 0.7540306370811329,
 0.8475250860456697,
 0.8852965761674942,
 0.7357324721296651,
 0.9260452326354205,
 0.827549379837944,
 0.5561965708933555,
 0.6648380357804835,
 0.8672176662289737,
 0.8857362874542185,
 0.7802907445790609,
 0.6150415365896966,
 0.8568324360901644,
 0.6967582348440877,
 0.7261028818632769,
 0.7420869873196464,
 0.817127091282155,
 0.8704423399505326,
 0.4162065889716583,
 0.6568706491002734,
 0.7792026318362504,
 0.7751866633148642,
 0.7163289426176083,
 0.7721451070840014,
 0.6391846869126023,
 0.8398087801370924,
 0.7837483846438736,
 0.5730149617303022]

cm15
[0.9881684652796879,
 0.9892113241178099,
 0.9884226359745666,
 0.9139024101414186,
 0.8073346111932792,
 0.9820889423528614,
 0.9672954718599777,
 0.6799901574448208,
 0.6475191200461614,
 0.6292640923621386,
 0.9472505671705846,
 0.9914307255889335,
 0.9928507946530606,
 0.8633897085607297,
 0.9466993766453119,
 0.9884486706510274,
 0.9770817381161581,
 0.9635393302546337,
 0.9920895785763428,
 0.9329770078106036,
 0.971023686015445,
 0.9914307255889335,
 0.9464760238695434,
 0.7712788435679849,
 0.994110934478776,
 0.9348508017520146,
 0.9653706074060049,
 0.9978594469169115,
 0.8661206408686306,
 0.5982202250265731,
 0.8682398296417532,
 0.9722689288318668,
 0.9358836744356628,
 0.9501927021515476,
 0.9821169431352174,
 0.3497624898555114,
 0.5634328055375777,
 0.7977399659131922,
 0.4095604648202178,
 0.7042118668999933,
 0.8184301942040995,
 0.7049610925398279,
 0.8867565597577852,
 0.848757664589386,
 0.5647151236052009,
 0.8809996447431543,
 0.8276658297513013,
 0.7477074999201954,
 0.6143539908219444,
 0.866899819903684,
 0.9379240539652309,
 0.6278466638766373,
 0.8444956669114547,
 0.9619952082010355,
 0.6989627580524918,
 0.6855601202703495,
 0.7774688949267848,
 0.7142052818949063,
 0.9580745996167455,
 0.8382881303851164,
 0.9162329789026794,
 0.7062307673655153,
 0.5812566584820149,
 0.8237553602997987,
 0.7175198794540579,
 0.9522514779296161,
 0.6220780334914093,
 0.6806389371893669,
 0.5266605538434512,
 0.7286463631636984,
 0.7273726571672173,
 0.863460034414845,
 0.8371568415273438,
 0.9109079192287989,
 0.8981725889032912,
 0.8231265027959632,
 0.5674774106747662,
 0.8580872612968553,
 0.8444128843221352,
 0.7947219233027993,
 0.7755789033117462,
 0.6150415365896966,
 0.939822423817993,
 0.7360466315405663,
 0.8837533169278498,
 0.768749028963652,
 0.7872443979130789,
 0.8470085946352103,
 0.40954203804288003,
 0.5690818892714472,
 0.8314744408069419,
 0.8321588078220247,
 0.6091475809813722,
 0.7890282785258529,
 0.697487400413548,
 0.8705736816895864,
 0.7099208590569699,
 0.5703726728893472]
'''
import matplotlib.pyplot as plt
import numpy as np
#plot pps dists across methods for all positions
term_scores=[cm1,
             cm15,
             cm2,
             cm3,
             cm5,
             cmref,
             hbnet1,
             hbnet2,
             hbnet3]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cmgp','cm1.5','cm2','cm3','cm5','fdref','hb1','hb2','hb3']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('hbnet.pdf')
plt.clf()




'''
new hb netresults with hbsc weights all at 2 and no penalty
f4p0=[0.9133137064379633, 0.6765132165867873, 0.5571386109545559, 0.994110934478776, 0.7943007173824526, 0.6927447412316282, 0.9092388557169162, 0.9881433313339292, 0.6409600493300907, 0.9653706074060049, 0.8141966092298825, 0.5074021520901169, 0.5281811683107367, 0.9978594469169115, 0.8784636643968423, 0.5853622523932536, 0.8994716270118447, 0.7961461681657157, 0.7544517092857825]
f4p1=[0.9088819401514243, 0.6588972562482882, 0.5603020323372268, 0.995966078254766, 0.8017843906546748, 0.7078576464413062, 0.9202404530045837, 0.9838724234761533, 0.6367975099915844, 0.9653706074060049, 0.8013657827760444, 0.49009046738301953, 0.5316323609879376, 0.9978594469169115, 0.893192456862081, 0.5932255650150497, 0.8663238987403927, 0.7574067855904684, 0.7025922352103107]
f4p11=[0.9088819401514243, 0.6593319538633282, 0.5478198509912349, 0.9933466723181642, 0.8038715305822353, 0.7078545592184896, 0.9097198346658153, 0.9879103865573576, 0.6295729895964111, 0.9653706074060049, 0.8003224209629891, 0.5017352838145429, 0.5211663372219817, 0.9978594469169115, 0.8877430921312377, 0.5989348682058334, 0.8836145699362563, 0.7188155551896437, 0.7040371317069327]
f4p12=[0.9088819401514243, 0.6922595773564564, 0.5686419839691745, 0.9938524893241314, 0.7918892337460219, 0.7127884956469495, 0.9092388557169162, 0.987875314634323, 0.6309523992261674, 0.9653706074060049, 0.7826210737649766, 0.494235404843711, 0.5230840246026882, 0.9977866970906862, 0.9126856323141586, 0.595380487405978, 0.8550266837671592, 0.6983531543809369, 0.6955710578051848]
xbn0=[0.6102401174329494, 0.7770386363191342, 0.9821169431352174, 0.5966379720738182, 0.6880416188497527, 0.7780638648828255, 0.807099186196314, 0.5636366448691124, 0.42676408380411246, 0.8680442260220202, 0.5406779671262099, 0.8709642891029141, 0.8131767727026713, 0.3926091821083877]
xbn1= [0.6101515098433112, 0.768107409269292, 0.9821169431352174, 0.552644603605141, 0.6455447461489681, 0.7043041779266257, 0.8397869182676392, 0.5578049542125711, 0.4692488253115702, 0.8648226917921072, 0.5339062187946308, 0.8727317717789765, 0.8390328431125119, 0.38985194130903456]
xbn11= [0.6199451614356595, 0.7885777577776912, 0.9821169431352174, 0.5576304039435547, 0.5919474575772155, 0.6708019789508528, 0.8397493095383053, 0.5349124142661762, 0.5169655846281228, 0.8630874079139061, 0.5308446463418688, 0.8656255015218117, 0.8367191798302797, 0.39110656014523715]
xbn12= [0.6278143026316514, 0.7965084323590795, 0.9821169431352174, 0.559439519094626, 0.5663696258595359, 0.6197483200622663, 0.8401280538062526, 0.5281701916676089, 0.4830247018538175, 0.8604061019857068, 0.536821389399269, 0.8589826981651041, 0.8121798200741361, 0.3979503104679174]
dk90= [0.9561685551182, 0.9914307255889335, 0.7570694142233224, 0.9928507946530606, 0.5726606596894034, 0.8682141734248019, 0.8936331735836577, 0.9461588162839857, 0.7106437672467473, 0.8276224349024917, 0.9884486706510274, 0.919501685040561, 0.9770817381161581, 0.62017789257901, 0.7302977772193269, 0.8618573496929529, 0.9874683221029863, 0.9682887903091907, 0.9920895785763428, 0.6548451880483237, 0.6880589209755312, 0.7804170559629557, 0.8990394935545942, 0.9869183372557877, 0.7475426581276525, 0.9518154871219145, 0.8290529900969734, 0.8986965270432079, 0.9914307255889335, 0.844405632754617]
dk91= [0.9594561099343702, 0.9914307255889335, 0.777492831218754, 0.9928507946530606, 0.5422473779026729, 0.864968106687819, 0.9042128015616282, 0.9461588162839857, 0.7416889275787539, 0.8361467345964674, 0.9884486706510274, 0.8969082786573774, 0.9770817381161581, 0.6272666001535551, 0.7356469230141038, 0.8536133130098229, 0.9924195045897083, 0.953637288239846, 0.9920895785763428, 0.5712037384475397, 0.6827625756864657, 0.7917021883104483, 0.8442881320206199, 0.9887000942571781, 0.7575637653772861, 0.9368901468535515, 0.8109982539535912, 0.8718665593254038, 0.9914307255889335, 0.767898429958494]
dk911= [0.9552151435004023, 0.9914307255889335, 0.7830406078536263, 0.9928507946530606, 0.5406348355650501, 0.8697913963926265, 0.9055221477695161, 0.9468381365999899, 0.7400579351272707, 0.8322476095327079, 0.9884486706510274, 0.8848797056542452, 0.9770817381161581, 0.6251333556083221, 0.7471342650792072, 0.8509625516932823, 0.9891925546347908, 0.937503317595366, 0.9920895785763428, 0.5784121476249561, 0.6984548972872799, 0.7791154845625149, 0.8025624853443163, 0.9921745748725413, 0.7772250550304433, 0.9258425373939435, 0.7492766701118301, 0.8434800443166957, 0.9914307255889335, 0.7350475476365798]
dk912= [0.9572397768459839, 0.9914307255889335, 0.7856574571818318, 0.9928507946530606, 0.5373020358396645, 0.8764380296179084, 0.8994236816432015, 0.9491490864799291, 0.7408551231617522, 0.8380922513575975, 0.9884486706510274, 0.8861035114977303, 0.9770817381161581, 0.6212508933870509, 0.7352845208337508, 0.8568125811937747, 0.9913792060839497, 0.9443142307791874, 0.9913479460822365, 0.5537592308708239, 0.6991174876365054, 0.7492680935268319, 0.821951211515026, 0.9922914014286731, 0.7757528146557964, 0.9430662766347565, 0.7564023079797647, 0.8031540376977878, 0.9914307255889335, 0.7009631160317091]
s6f0= [0.7527842652582694, 0.41464758936613266, 0.8701829759699525, 0.887653532175089, 0.9150168390205491, 0.7111979118993335, 0.9723033938823549, 0.9358836744356628, 0.8554022270573857, 0.7615309496883356, 0.7446285299922625, 0.9291378940439704, 0.8498198945755889, 0.8141131311954487]
s6f1= [0.7926141201187555, 0.4115724718204252, 0.8682174293287441, 0.8942187908464506, 0.9131521714279451, 0.7439649417550931, 0.9696197043786873, 0.9397747478347603, 0.8549214630342694, 0.7349694074255714, 0.735048210008914, 0.8968092490454156, 0.7981686106713192, 0.8116018871419323]
s6f11=[0.7823319171796009, 0.412979230587188, 0.8553790963419607, 0.8983113570424144, 0.9197640638315159, 0.7553799623663036, 0.9716361615105245, 0.9358836744356628, 0.874858453237796, 0.7447977574954558, 0.7501853366229138, 0.878313731545221, 0.8137248147985524, 0.8402322404601223]
s6f12= [0.7904679389398019, 0.4151407680381357, 0.8610859017004784, 0.8894114179614296, 0.9277525072569678, 0.7751174217090929, 0.9748560571061665, 0.9358836744356628, 0.8716976564183901, 0.7413147072570305, 0.7778444061536016, 0.8701512625805605, 0.780026656764697, 0.8138302035918831]
zk40= [0.9881684652796879, 0.7042118668999933, 0.82581369714622, 0.7344673696729374, 0.9896686445195091, 0.8528156915660021, 0.9884226359745666, 0.7868638903326909, 0.6150415365896966, 0.8235113477395708, 0.8811181999802429, 0.5979041975953621, 0.830311805413569, 0.9739127328050178, 0.9672954718599777, 0.765745413747041, 0.9083925579304492, 0.8563969685361663, 0.6511852920603518, 0.5571233954923646, 0.5484163180165484]
zk41= [0.9881684652796879, 0.7042118668999933, 0.8629577168256904, 0.7633074078375388, 0.9890726644193476, 0.8311954318788821, 0.9877753300459121, 0.7756096223927764, 0.6150415365896966, 0.8443356212925237, 0.9161669256019749, 0.6144695114012282, 0.8492404665368565, 0.957850547231692, 0.9668800686345083, 0.7274245232568266, 0.9016976229924607, 0.8491939044863979, 0.6364305906938137, 0.5034823783095607, 0.5937820938462263]
zk411= [0.9881684652796879, 0.7042118668999933, 0.8579715121796667, 0.7527814064711905, 0.9893997301134402, 0.8239626729302411, 0.9884226359745666, 0.8009344327429302, 0.6150415365896966, 0.8236962483105854, 0.9156234061300625, 0.5689033160913084, 0.8505617725897312, 0.9555181381964333, 0.9667655521172159, 0.693809136443446, 0.8953231729981359, 0.8397303906835416, 0.6454460330875564, 0.5112836335975984, 0.6445843322723099]
zk412= [0.9881684652796879, 0.7042118668999933, 0.8347210151328357, 0.7770591614020841, 0.9902899843636894, 0.8254881050382228, 0.9884226359745666, 0.7761320406425626, 0.6150415365896966, 0.8189649013767599, 0.9221366253796116, 0.6262056524545531, 0.8481582242970416, 0.9465171139203697, 0.9670697848962088, 0.725863948014968, 0.9007395614231506, 0.8268095055463424, 0.6230047299048523, 0.4835731581508933, 0.7261000591759897]
'''

l=[]
for i in f4p0:
    l.append(i)
for i in zk40:
    l.append(i)
for i in dk90:
    l.append(i)
for i in xbn0:
    l.append(i)
for i in s6f0:
    l.append(i)

hbnet1=[i for i in l]
l=[]
for i in f4p1:
    l.append(i)
for i in zk41:
    l.append(i)
for i in dk91:
    l.append(i)
for i in xbn1:
    l.append(i)
for i in s6f1:
    l.append(i)
hbnet2=[i for i in l]
l=[]
for i in f4p11:
    l.append(i)
for i in zk411:
    l.append(i)
for i in dk911:
    l.append(i)
for i in xbn11:
    l.append(i)
for i in s6f11:
    l.append(i)
hbnet3=[i for i in l]
l=[]
for i in f4p12:
    l.append(i)
for i in zk412:
    l.append(i)
for i in dk912:
    l.append(i)
for i in xbn12:
    l.append(i)
for i in s6f12:
    l.append(i)
hbnet4=[i for i in l]

import matplotlib.pyplot as plt
import numpy as np
#plot pps dists across methods for all positions
term_scores=[cm1,
             cm15,
             cm2,
             cm3,
             hbnet1,
             hbnet2,
             hbnet3,
             hbnet4]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['cmgp','cm1.5','cm2','cm3','hb1','hb2','hb3','hb4']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('hbnet_r2.pdf')
plt.clf()


'''
USING HBNET BONUS OF 1.0 GETS BEST RESULTS .838
LESS THAN HBSC2 RES OF .848
SAME AS HBSC1.5
HBNET .5, 1.5 HAVE .828, 2.0 HAS .816

I THINK ITS WORTHWHILE TO TEST UNSAT PENALTY BY ITSELF,
AS WELL AS SCANNING VALUES WITH HBNET AT 1.0
'''




'''
lets look at 3r2q fixed results
cmgp and cmgphbsc2:
r2q0= [0.6627242495250985, 0.8172180352503544, 0.6941654600946502, 0.6655700581773695, 0.5731043285719439, 0.8890202116322982, 0.8744127957231764, 0.962732524148396, 0.7349797338527779, 0.6836055247115584, 0.8927371367238578]
r2q1= [0.6878739543683439, 0.7982537282269387, 0.7098029558993507, 0.6533623088829723, 0.5377882838767927, 0.8620141620313934, 0.8691625218080273, 0.9281355914807113, 0.6879309321280783, 0.8753341426936864, 0.8982355974195845]
r2qog=[0.6032148892221986, 0.7583966933332807, 0.8144600765686245, 0.7087396831858294, 0.9196605027097405, 0.8061432172553629, 0.9243898373856915, 0.8025498566314955, 0.5955841899635694, 0.5485685618746037, 0.8965079415646431]
r2qvirt= [0.6894076620465683, 0.8197499488999864, 0.7012732675446292, 0.6756664179192712, 0.5935825233551966, 0.9052323100697452, 0.8786274075002113, 0.9598967879486702, 0.7135542279784964, 0.6742068947525601, 0.9074626276181844]


dlcvirt= [0.887663702319341, 0.71703144222544, 0.9563088742229886, 0.6821026597063928, 0.9856747889468176, 0.7410823437797991, 0.6798145770109136, 0.9494680325387125, 0.5199633886548112, 0.8409944171184706, 0.8853739958845728, 0.9475141300253663, 0.5912142280267776, 0.7634357624236527, 0.5650110746982882, 0.5696537250754619, 0.7539344048972345, 0.6351973795936843, 0.4916753590079532]
dlc_amanda=[0.5639786193842955, 0.8442305592335496, 0.9624750959805364, 0.6407635901201177, 0.9856546068539067, 0.7485212246038417, 0.8201398164378928, 0.9271586568536596, 0.6714720761069825, 0.8322357916153154, 0.8453901317636243, 0.7739072180319639, 0.7387177704310526, 0.8093742366140724, 0.8312080312069858, 0.6576916831543633, 0.7227528674406454, 0.8488325003961545, 0.7100741222644731]


dlc0=[0.8893861816256735, 0.7302948313665758, 0.9563088742229886, 0.6721273778585315, 0.9856747889468176, 0.7336044532645989, 0.6991354805491725, 0.9494680325387125, 0.5196057046320818, 0.8478454116026938, 0.8674709567958904, 0.9462607221879638, 0.5872016479116233, 0.7280970312275228, 0.5730738508703441, 0.5731699521989242, 0.7553099606757332, 0.6650554748937223, 0.5033887601267338]
dlc1=[0.8747709287549165, 0.7692531703255148, 0.9563088742229886, 0.6469412300680597, 0.9856747889468176, 0.7543171633095266, 0.6937174085336195, 0.9494680325387125, 0.5586836176326859, 0.9120064136009771, 0.8824219808990956, 0.8904279936429216, 0.6050670074415615, 0.7054263595726356, 0.5583839740012005, 0.5696537250754619, 0.7407205292101342, 0.6635030396468765, 0.5220586319649667]
'''
import matplotlib.pyplot as plt
import numpy as np
#plot pps dists across methods for all positions
term_scores=[r2qog,
             r2qvirt,
             r2q0,
             r2q1]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['og','virt','gp','gphbsc2']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('3r2qfixed.pdf')
plt.clf()


term_scores=[dlc_amanda,
             dlcvirt,
             dlc0,
             dlc1]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['og','virt','gp','gphbsc2']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('3dlcfixed.pdf')
plt.clf()


'''
no mm bend!
dlc2=[0.8890535128223455, 0.716080744891604, 0.9563088742229886, 0.6518983090506394, 0.9856747889468176, 0.7055293120209079, 0.6836463957471242, 0.9494680325387125, 0.5141161272386486, 0.8585363419626728, 0.8716485011542794, 0.94763212339145, 0.5825145166326974, 0.7252914663676452, 0.5871534572351813, 0.5637708208983696, 0.7485630229665394, 0.6497396157237427, 0.4851869022773705]
r2q2=[0.705224060602738, 0.844229231793356, 0.6989958781444972, 0.6751689617123995, 0.5826792832326679, 0.9019560246730638, 0.8665215439988794, 0.9749707753034011, 0.7095112319579127, 0.7187631780752607, 0.8872340214648641]
'''
import matplotlib.pyplot as plt
import numpy as np
#plot pps dists across methods for all positions
term_scores=[r2qog,
             r2qvirt,
             r2q0,
             r2q1,
             r2q2]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['og','virt','gp','gphbsc2','gpnomm']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('3r2qnommbend.pdf')
plt.clf()


term_scores=[dlc_amanda,
             dlcvirt,
             dlc0,
             dlc1,
             dlc2]
fig,ax=plt.subplots()
bp_dict = ax.boxplot(term_scores)
meds=[]
for line in bp_dict['medians']:
    x,y = line.get_xydata()[1]
    meds.append((x,y))
plt.clf()
fig,ax=plt.subplots()
bp_dict = ax.violinplot(term_scores,showmedians=True)
ax.set_title('PPS Distributions for All 98 Positions; Comparison Across Methods')
ax.set_ylabel('PPS')
xlocs=[x+1 for x in range(len(term_scores))]
xlabs=['og','virt','gp','gphbsc2','gpnomm']
plt.xticks(xlocs, xlabs)
for x,y in meds:
    plt.text(x,y, '%.3f' % y,verticalalignment='center')
for i in range(len(term_scores)):
    y = term_scores[i]
    x = np.random.normal(1+i, 0.04, size=len(y))
    ax.plot(x, y, 'r.', alpha=0.2)
plt.savefig('3dlcnommbend.pdf')
plt.clf()
